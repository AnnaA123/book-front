{"version":3,"sources":["components/Header.js","util/BookAPI.js","components/SearchBooks.js","components/SuggestBooks.js","components/BookSearch.js","views/Search.js","util/fetchGQL.js","util/LoginAPI.js","components/LoginForm.js","views/Login.js","util/UsersAPI.js","components/SignupForm.js","views/Signup.js","components/UserProfile.js","util/ReviewAPI.js","components/ListUserReviews.js","views/Profile.js","components/BookInfo.js","components/ListReviews.js","views/Book.js","components/WriteReview.js","views/NewReview.js","components/ShowReview.js","views/Review.js","components/DeleteUser.js","views/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","localStorage","getItem","className","to","onClick","clear","apiUrl","getBook","id","fetch","then","response","json","SearchBooks","props","getBooks","terms","state","searchTitle","books","setState","items","loading","showThumbnail","book","undefined","volumeInfo","imageLinks","src","thumbnail","alt","title","componentDidMount","sTitle","bind","this","map","React","Component","SuggestBooks","setSubject","min","max","Math","ceil","floor","num","random","console","log","subject","BookSearch","toggler","prevState","toggle","searchResults","handleTitleSearch","event","preventDefault","byAuthor","handleChange","val","target","value","onSubmit","for","type","placeholder","name","onChange","Search","fetchGraphql","query","a","options","method","headers","Accept","authorization","body","JSON","stringify","data","login","user","queryA","username","password","LoginForm","doLogin","u","userIsSet","setUser","setItem","token","history","push","errorMessage","validUser","handleSubmit","htmlFor","label","Login","getSingleUser","register","queryB","email","description","signup","editUser","queryC","modifyUser","deleteUser","queryE","SignUpForm","checkPw","error","userCreated","Signup","SignupForm","UserProfile","getUserId","splitLocation","window","location","href","split","length","getUser","edits","userProfile","editDescription","edited","reload","userDescription","editing","form","handleEditBtn","editBtn","userId","getAllBookReviews","BookID","reviewsByBook","getAllUserReviews","UserID","reviewsByUser","getSingleReview","review","addNewReview","queryD","BookTitle","Title","Content","Rating","addReview","editReview","modifyReview","deleteReview","queryF","ListUserReviews","getReviews","reviews","Profile","BookInfo","getBookId","getBookInfo","info","bookInfo","showBookAuthors","authors","author","showCover","writeReview","bookid","componentWillUnmount","callback","authorKey","handleClick","ListReviews","users","showContent","prev","bookId","class","getContent","Book","WriteReview","content","sentReview","rating","NewReview","ShowReview","getReviewId","setTimeout","findUser","n","findIndex","x","getBookData","reviewEdit","handleDelete","contentView","viewerWriter","deleteBtn","getReview","reviewId","Review","DeleteUser","removeUser","Settings","App","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96a14a19.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n function Header() {\r\n     if (localStorage.getItem('token') !== null) {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-danger\">\r\n                <div className='container-fluid'>\r\n                    <Link className='navbar-brand' to='/'>BookSide</Link>\r\n                        <div>\r\n                            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/' >Search</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link'  to={`/users/${localStorage.getItem('currentUser')}`} >Profile</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/settings'>Settings</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/login' onClick={() => {localStorage.clear()}}>Logout</Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n        \r\n     } else {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-danger\">\r\n                <div className='container-fluid'>\r\n                    <Link className='navbar-brand' to='/'>BookSide</Link>\r\n                        <div>\r\n                            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/' >Search</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/login' >Login</Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n     }\r\n}\r\n\r\nexport default withRouter(Header);","const apiUrl = 'https://www.googleapis.com/books';\r\n\r\nconst searchBooksByTitle = (terms) => {\r\n    return fetch(apiUrl + '/v1/volumes?q=search+' + terms).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst searchBooksByAuthor = (terms) => {\r\n    return fetch(apiUrl + '/v1/volumes?q=inauthor+' + terms).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst searchBooksBySubject = (terms) => {\r\n    return fetch(apiUrl + '/v1/volumes?q=subject:' + terms).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst getBook = (id) => {\r\n    return fetch(apiUrl + '/v1/volumes/' + id).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport { searchBooksByTitle, searchBooksByAuthor, searchBooksBySubject, getBook };","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { searchBooksByTitle } from '../util/BookAPI';\r\n\r\n// list books from google books api with props from BookSearch.js\r\n class SearchBooks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n            searchTitle: props.sTitle,\r\n            loading: true,\r\n        }\r\n        this.getBooks = this.getBooks.bind(this);\r\n    }\r\n\r\n    getBooks = () => {\r\n        searchBooksByTitle(this.state.searchTitle).then(books => {\r\n            this.setState({\r\n                books: books.items,\r\n                loading: false,\r\n            });\r\n            });\r\n     }\r\n\r\n     showThumbnail = (book) => {\r\n         if (book.volumeInfo.imageLinks !== undefined){\r\n            return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n         } else {\r\n             return <p className=\"mt-3\">(No image available)</p>\r\n         }\r\n     }\r\n\r\n    componentDidMount = () => {\r\n        this.getBooks();\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.books !== undefined) {\r\n                return <div className=\"row row-cols-3\">{this.state.books.map((book) => {\r\n                    return <div className=\"col col-sm-4 border border-white\" key={book.id}>\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/book/${book.id}`} key={book.id}> \r\n                            <div>\r\n                                {this.showThumbnail(book)}\r\n                                <p>{ book.volumeInfo.title }</p>\r\n                            </div>\r\n                    </Link></div>\r\n                })}</div>\r\n            } else {\r\n                return <div>\r\n                    <p>No search results</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchBooks;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { searchBooksBySubject } from '../util/BookAPI';\r\n\r\n// adds random books into the search page when nothing is being searched\r\n class SuggestBooks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n            subject: this.setSubject(1, 7),\r\n            loading: true,\r\n        }\r\n        this.getBooks = this.getBooks.bind(this);\r\n    }\r\n\r\n    setSubject = (min, max) => {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        const num = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n        console.log(num)\r\n\r\n        switch(num) {\r\n            case 1:\r\n                return 'fiction'\r\n            case 2:\r\n                return 'science'\r\n            case 3:\r\n                return 'horror'\r\n            case 4:\r\n                return 'comics'\r\n            case 5:\r\n                return 'fantasy'\r\n            case 6:\r\n                return 'ya'\r\n            case 7:\r\n                return 'diy'\r\n            default:\r\n              return 'fiction';\r\n          } \r\n    }\r\n\r\n    getBooks = () => {\r\n        searchBooksBySubject(this.state.subject).then(books => {\r\n            this.setState({\r\n                books: books.items,\r\n                loading: false,\r\n            });\r\n            });\r\n     }\r\n\r\n     showThumbnail = (book) => {\r\n         if (book.volumeInfo.imageLinks !== undefined){\r\n            return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n         } else {\r\n             return <p className=\"mt-3\">(No image available)</p>\r\n         }\r\n     }\r\n\r\n    componentDidMount = () => {\r\n        this.getBooks();\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.books !== undefined) {\r\n                return <div className=\"row row-cols-3\">{this.state.books.map((book) => {\r\n                    return <div className=\"col col-sm-4 border border-white\" key={book.id}>\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/book/${book.id}`} key={book.id}> \r\n                            <div>\r\n                                {this.showThumbnail(book)}\r\n                                <p>{ book.volumeInfo.title }</p>\r\n                            </div>\r\n                    </Link></div>\r\n                })}</div>\r\n            } else {\r\n                return <div>\r\n                    <p>Loading</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default SuggestBooks;","import React from 'react'\r\nimport SearchBooks from './SearchBooks';\r\nimport SuggestBooks from './SuggestBooks';\r\n\r\n// search bar at /views/Search.js for searching books from google api\r\n class BookSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchTitle: '',\r\n            byAuthor: false,\r\n            toggle: false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTitleSearch = this.handleTitleSearch.bind(this);\r\n    }\r\n\r\n    // update the search results\r\n    toggler = () => {\r\n        this.setState(prevState => ({ toggle: !prevState.toggle }));\r\n    }\r\n\r\n    searchResults = () => {\r\n        if (this.state.toggle) {\r\n            return <div><SearchBooks sTitle={this.state.searchTitle}/></div>\r\n        } else {\r\n            return <SuggestBooks/>\r\n        }\r\n    }\r\n\r\n    handleTitleSearch = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => ({ byAuthor: false }));\r\n        this.toggler();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const val = event.target.value;\r\n\r\n        this.setState(() => ({\r\n            toggle: false,\r\n            searchTitle: val,\r\n        }));\r\n    }\r\n\r\n    render (){\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n            <form onSubmit={this.handleTitleSearch}>\r\n            <div className=\"row g-3 align-items-center mt-1\">\r\n                <div className=\"col-auto\">\r\n                    <label for=\"searchTitle\" className=\"col-form-label\">Search for books</label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                    <input \r\n                        className=\"form-control\" \r\n                        type=\"search\" \r\n                        placeholder=\"Search\" \r\n                        name='searchTitle'\r\n                        value={this.state.searchTitle} \r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n                </div></div>\r\n            </form>\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                {this.searchResults()}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default BookSearch;","import React from 'react';\r\nimport BookSearch from '../components/BookSearch';\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <BookSearch />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","const fetchGraphql = async (query) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        authorization: 'bearer ' + localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify(query),\r\n      \r\n    };\r\n    try {\r\n      const response = await fetch(\r\n        \"https://booksight.jelastic.metropolia.fi/graphql\",\r\n        // \"http://localhost:4000/graphql\",\r\n        options\r\n      );\r\n      const json = await response.json();\r\n      return json.data;\r\n    } catch (e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n  };\r\n\r\nexport {fetchGraphql};","import {fetchGraphql} from './fetchGQL.js';\r\n\r\nconst login = async (user) => {\r\n    const queryA = {\r\n        query:`\r\n            {\r\n                login(\r\n                username: \"${user.username}\",\r\n                password: \"${user.password}\"\r\n                ) {\r\n                id,\r\n                username,\r\n                token\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryA);\r\n    return data.login;\r\n}\r\n\r\nexport { login };","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { login } from '../util/LoginAPI';\r\n\r\n//used in Login.js\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            errorMessage: '',\r\n            validUser: true,\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.doLogin = this.doLogin.bind(this);\r\n    }\r\n\r\n    //sends the info to LoginAPI.js, which sends and compares it to the database\r\n    doLogin = () => {\r\n        const u = {\r\n            username: this.state.user.username,\r\n            password:  this.state.user.password\r\n        }\r\n        login(u).then(response => {\r\n            if (response !== null) {\r\n                if (response.username !== undefined) {\r\n                    const userIsSet = this.props.setUser(response);\r\n                    localStorage.setItem('token', response.token);\r\n                    localStorage.setItem('currentUser', response.id);\r\n                    this.props.history.push('/');\r\n                    return userIsSet;\r\n                } else {\r\n                    this.setState({errorMessage: 'Username or password is incorrect.'});\r\n                }\r\n            } else {\r\n                this.setState({errorMessage: 'Something went wrong'});\r\n            }\r\n        })\r\n    };\r\n    \r\n    //input handling\r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.doLogin();\r\n    }\r\n    \r\n    render () {\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h1>Login</h1>\r\n                    <div className=\"mb-3\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control height=200px\"\r\n                        name=\"username\" \r\n                        id=\"username\" \r\n                        label=\"Username\"\r\n                        value={this.state.user.username}\r\n                        onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\"\r\n                        name=\"password\" \r\n                        id=\"password\" \r\n                        label=\"Password\"\r\n                        value={this.state.user.password}\r\n                        onChange={this.handleChange}\r\n                         />\r\n                    </div>\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Don't have an account yet? <Link to='/signup'>Sign up here!</Link></p>\r\n                        \r\n                        <p>{\"\\n\"}</p>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Login</button>\r\n                </form>\r\n                </div></div>\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from 'react';\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nfunction Login(props) {\r\n    return (\r\n        <div>\r\n            <LoginForm setUser={props.setUser} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import {fetchGraphql} from './fetchGQL.js';\r\n\r\nconst getSingleUser = async (id) => {\r\n    const queryA = {\r\n        query:`\r\n             {\r\n                user(id: \"${id}\"){\r\n                    id, \r\n                    username,\r\n                    email,\r\n                    description\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryA);\r\n    return data.user;\r\n}\r\n\r\n//add a new user at SignUpForm.js\r\nconst register = async (user) => {\r\n    const queryB = {\r\n        query:`\r\n            mutation {\r\n                signup(\r\n                username: \"${user.username}\", \r\n                password: \"${user.password}\", \r\n                email: \"${user.email}\",\r\n                description: \"${user.description}\",\r\n                ){\r\n                id, \r\n                username\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryB);\r\n    return data.signup;\r\n}\r\n\r\nconst editUser = async (user, id) => {\r\n    const queryC = {\r\n        query:`\r\n            mutation {\r\n                modifyUser(\r\n                id: \"${id}\",\r\n                username: \"${user.username}\",\r\n                email: \"${user.email}\",\r\n                description: \"${user.description}\",\r\n                ) {\r\n                id, \r\n                username,\r\n                description\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryC);\r\n    return data.modifyUser;\r\n}\r\n\r\nconst deleteUser = async (id) => {\r\n    const queryE = {\r\n        query:`\r\n            mutation {\r\n                deleteUser(id: \"${id}\"){\r\n                    id\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryE);\r\n    return data.deleteUser;\r\n}\r\n\r\n\r\nexport { getSingleUser, register, editUser, deleteUser };","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { register } from '../util/UsersAPI';\r\n\r\n//used in Signup.js\r\n\r\nclass SignUpForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                checkPw: '',\r\n            },\r\n            errorMessage: '',\r\n            userCreated: false,\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    //sends submit info to UsersAPI.js to register, if it doesnt work, adds an error message to the page\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.user.password === this.state.user.checkPw) {\r\n            const user = {\r\n                username: this.state.user.username,\r\n                email: this.state.user.email,\r\n                password: this.state.user.password,\r\n                description: 'Welcome to my profile!',\r\n            }\r\n\r\n            register(user).then(user => {\r\n                if (user.error !== undefined) {\r\n                    this.setState({ errorMessage: 'Cannot signup. Username, password or email needs to be changed.' })\r\n                } else {\r\n                    this.setState({ userCreated: true });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errorMessage: 'Passwords do not match.' })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.state.userCreated) {\r\n            return <div>\r\n                <p>User has been successfully created.</p>\r\n                <Link to='/login'>Back to Login page</Link>\r\n            </div>\r\n        } else {\r\n        return <div className=\"container\">\r\n            <div className=\" d-inline-flex\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h1>Sign Up</h1>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"username\" \r\n                            value={this.state.username} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            name=\"password\" \r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div for=\"checkPw\" className=\"mb-3\">\r\n                        <label htmlFor=\"checkPw\">Password again</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            name=\"checkPw\"\r\n                            value={this.state.checkPw} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Already have an account? <Link to='/login'>Login here!</Link></p>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Sign Up</button>\r\n                </form>\r\n                </div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUpForm);","import React from 'react';\r\nimport SignupForm from '../components/SignupForm';\r\n\r\nfunction Signup(props) {\r\n    return (\r\n        <div>\r\n            <SignupForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {getSingleUser, editUser} from '../util/UsersAPI.js';\r\n\r\n class UserProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: [],\r\n            edits: '',\r\n            editing: false,\r\n            userProfile: false,\r\n            loading: true,\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleEditBtn = this.handleEditBtn.bind(this);\r\n    }\r\n\r\n    handleChange(event) {   \r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    getUserId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const userId = splitLocation[splitLocation.length -1];\r\n        return userId;\r\n    }\r\n\r\n    getUser = (id) => {\r\n        getSingleUser(id).then((user) => {\r\n            this.setState({\r\n                user: user,\r\n                edits: user.description,\r\n                loading: false,\r\n            })\r\n            if (user.id === localStorage.getItem('currentUser')) {\r\n                this.setState({\r\n                    userProfile: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    editDescription = (event) => {\r\n        event.preventDefault();\r\n\r\n        const edited = {\r\n            username: this.state.user.username,\r\n            email: this.state.user.email,\r\n            description: this.state.edits\r\n        }\r\n\r\n        editUser(edited, localStorage.getItem('currentUser')).then(response => {\r\n            if (response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    userDescription = () => {\r\n        if (this.state.editing) {\r\n            return <div className=\"d-flex flex-column\">\r\n            <form id='descform' onSubmit={this.editDescription}>\r\n                <div className=\"mb-3\">\r\n                <textarea \r\n                form='descform'\r\n                className=\"form-control\"\r\n                name='edits'\r\n                value={this.state.edits}\r\n                onChange={this.handleChange}></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-danger m-3\" type='submit'>Save</button>\r\n            </form>\r\n            </div>\r\n        } else {\r\n            return <div><p>{this.state.user.description}</p></div>\r\n        }\r\n    }\r\n\r\n    handleEditBtn = (event) => {\r\n        event.preventDefault();\r\n        this.setState({editing: !this.state.editing});\r\n    }\r\n\r\n    editBtn = () => {\r\n        if (this.state.userProfile && this.state.editing === false) {\r\n            return <div>\r\n                <button className=\"btn btn-danger m-3\" onClick={this.handleEditBtn}>Edit profile</button>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = this.getUserId();\r\n        this.getUser(userId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.user !== undefined) {\r\n                return <div  className=\"p-5 w-100\">\r\n                    <h2>{this.state.user.username}</h2>\r\n                    {this.userDescription()}\r\n                    {this.editBtn()}\r\n                    </div>\r\n            } else {\r\n                return <div>\r\n                        <p>This user does not exist</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(UserProfile);","import {fetchGraphql} from './fetchGQL.js';\r\n\r\nconst getAllBookReviews = async (BookID) => {\r\n    const queryA = {\r\n        query:`\r\n             {\r\n                reviewsByBook(BookID: \"${BookID}\"){\r\n                id, \r\n                Title, \r\n                Content,\r\n                Rating,\r\n                BookTitle,\r\n                BookID,\r\n                UserID {\r\n                    id,\r\n                    username\r\n                  }\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryA);\r\n    return data.reviewsByBook;\r\n}\r\n\r\nconst getAllUserReviews = async (UserID) => {\r\n    const queryB = {\r\n        query:`\r\n             {\r\n                reviewsByUser(UserID: \"${UserID}\"){\r\n                id, \r\n                Title, \r\n                Content,\r\n                Rating,\r\n                BookTitle,\r\n                BookID,\r\n                UserID {\r\n                    id,\r\n                    username\r\n                  }\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryB);\r\n    return data.reviewsByUser;\r\n}\r\n\r\nconst getSingleReview = async (id) => {\r\n    const queryC = {\r\n        query:`\r\n             {\r\n                review(id: \"${id}\"){\r\n                id, \r\n                Title, \r\n                Content,\r\n                Rating,\r\n                BookTitle,\r\n                BookID,\r\n                UserID {\r\n                    id\r\n                    username\r\n                  }\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryC);\r\n    return data.review;\r\n}\r\n\r\nconst addNewReview = async (review) => {\r\n    const queryD = {\r\n        query:`\r\n            mutation {\r\n                addReview(\r\n                BookID: \"${review.BookID}\", \r\n                BookTitle: \"${review.BookTitle}\", \r\n                UserID: \"${review.UserID}\",\r\n                Title: \"${review.Title}\",\r\n                Content: \"${review.Content}\",\r\n                Rating: \"${review.Rating}\"\r\n                ) {\r\n                id, \r\n                Title, \r\n                Content\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryD);\r\n    return data.addReview;\r\n}\r\n\r\nconst editReview = async (review, id) => {\r\n    const queryE = {\r\n        query:`\r\n            mutation {\r\n                modifyReview(\r\n                id: \"${id}\",\r\n                Title: \"${review.Title}\",\r\n                Content: \"${review.Content}\",\r\n                Rating: \"${review.Rating}\"\r\n                ) {\r\n                id, \r\n                Title, \r\n                Content\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryE);\r\n    return data.modifyReview;\r\n}\r\n\r\nconst deleteReview = async (id) => {\r\n    const queryF = {\r\n        query:`\r\n            mutation {\r\n                deleteReview(id: \"${id}\"){\r\n                    id\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryF);\r\n    return data.deleteReview;\r\n}\r\n\r\nexport { \r\n    getAllBookReviews, \r\n    getAllUserReviews, \r\n    getSingleReview, \r\n    addNewReview, \r\n    editReview, \r\n    deleteReview \r\n};","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllUserReviews } from '../util/ReviewAPI';\r\n\r\n// for /views/Profile.js\r\n class ListUserReviews extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews: [],\r\n            loading: true,\r\n        }\r\n        this.getReviews = this.getReviews.bind(this);\r\n    }\r\n\r\n    getUserId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const userId = splitLocation[splitLocation.length -1];\r\n        return userId;\r\n    }\r\n\r\n    getReviews = (id) => {\r\n        getAllUserReviews(id).then(reviews => {\r\n            this.setState({\r\n              reviews,\r\n              loading: false,\r\n            });\r\n          });\r\n     }\r\n\r\n    componentDidMount() {\r\n        //const userId = localStorage.getItem('currentUser');\r\n        const userId = this.getUserId();\r\n        this.getReviews(userId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.reviews[0] !== undefined) {\r\n                return <div className=\"p-2 w-100\">\r\n                    <h4 className=\"mt-3\">Reviews by this user:</h4>\r\n                {this.state.reviews.map((review) => {\r\n                    return <div className=\"mb-3 border-top border-dark\" key={review.id}>\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/review/${review.id}`}>\r\n                            <div>\r\n                                <h5 className=\"mt-2\">\r\n                                    { review.Title }\r\n                                </h5>\r\n                                <p className=\"small\">{review.BookTitle}</p>\r\n                            </div>\r\n                        </Link></div>\r\n                })} </div>\r\n            } else {\r\n                return <div>\r\n                        <p>No reviews</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListUserReviews;","import React from 'react';\r\nimport UserProfile from '../components/UserProfile';\r\nimport ListUserReviews from './../components/ListUserReviews';\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className=\"d-flex flex-row\">\r\n            <UserProfile />\r\n            <ListUserReviews />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {getBook} from '../util/BookAPI';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n// fetch info about a specific book from google books\r\n// at /views/Book.js\r\n class BookInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookInfo: [],\r\n            loading: true,\r\n            authorKey: 0,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getBookInfo = (id) => {\r\n        getBook(id).then(info => {\r\n            if (info !== undefined) {\r\n                this.setState({\r\n                    bookInfo: info,\r\n                    loading: false\r\n                })\r\n            } else {\r\n                console.log('Error retrieving data.')\r\n            }\r\n        })\r\n    }\r\n\r\n    showBookAuthors = (book) => {\r\n        if (book.volumeInfo.authors !== undefined) {\r\n            return <div>{book.volumeInfo.authors.map((author) => {\r\n                return <p>{author}</p>\r\n            })}</div>\r\n        }\r\n    }\r\n\r\n    showCover = (book) => {\r\n        if (book.volumeInfo.imageLinks !== undefined){\r\n           return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n        } else {\r\n            return <p className=\"mt-3 mb-3\">No image available</p>\r\n        }\r\n    }\r\n\r\n    writeReview = () => {\r\n        if (localStorage.getItem('token') !== null) {\r\n            return <div>\r\n                <Link className=\"link-danger text-decoration-none\" to={`/write/${this.state.bookInfo.id}`}>Write review</Link>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n\r\n        this.props.history.push('/write');\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const bookid = this.getBookId();\r\n        this.getBookInfo(bookid);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.setState = (state,callback)=>{\r\n            return;\r\n        };\r\n    }\r\n\r\n    render (){\r\n        if(this.state.loading) {\r\n            return <div>\r\n                    <p>Loading...</p>\r\n                </div>\r\n        } else {\r\n            if (this.state.bookInfo.volumeInfo === undefined){\r\n                return <div><p>error</p></div>\r\n            } else {\r\n                return <div className=\"p-2 m-3\">\r\n                <div>\r\n                    {this.showCover(this.state.bookInfo)}\r\n                    <h3>{this.state.bookInfo.volumeInfo.title}</h3>\r\n                    {this.showBookAuthors(this.state.bookInfo)}\r\n                    {this.writeReview()}\r\n                </div>\r\n                </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(BookInfo);","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllBookReviews } from '../util/ReviewAPI';\r\nimport { getSingleUser } from '../util/UsersAPI';\r\n\r\n// for /views/Book.js\r\n class ListReviews extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews: [],\r\n            users: [],\r\n            showContent: true,\r\n            loading: true,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getReviews = this.getReviews.bind(this);\r\n    }\r\n\r\n    handleChange(event) {   \r\n        \r\n        this.setState((prev) => ({\r\n            showContent: !prev.showContent\r\n        }));\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getReviews(id) {\r\n        getAllBookReviews(id).then(reviews => {\r\n            this.setState({\r\n              reviews,\r\n              loading: false,\r\n            });\r\n          });\r\n     }\r\n\r\n     getContent(review) {\r\n         if (this.state.showContent) {\r\n             return <p>{ review.Content }</p>\r\n         }\r\n     }\r\n\r\n    componentDidMount() {\r\n        const bookId = this.getBookId();\r\n        this.getReviews(bookId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.reviews[0] !== undefined) {\r\n                return <div>\r\n                    <div className=\"mt-3\">\r\n                        <input className=\"me-1\" type=\"checkbox\" id=\"sc\" name=\"showContent\" value={this.state.value} onClick={this.handleChange}/>\r\n                        <label for=\"sc\">Hide full reviews</label><br/>\r\n                    </div>\r\n                    <div className=\"p-5 w-100 flex-column\">{this.state.reviews.map((review) => {\r\n                    return <div className=\"mb-3 border-bottom border-dark\" key={review.id}>\r\n                    <div className=\"mb-3 \">\r\n                        <div className=\"row\">\r\n                            <Link className=\"link-danger text-decoration-none\" to={`/review/${review.id}`}><h3>{ review.Title } <small class=\"text-muted\">{review.Rating}/5</small></h3></Link>\r\n                        </div>\r\n                        { this.getContent(review) }\r\n                        <Link className=\"link-dark fw-bold\" to={`/users/${review.UserID.id}`}>{ review.UserID.username }</Link>\r\n                    </div></div>\r\n                })}</div></div>\r\n            } else {\r\n                return <div>\r\n                        <p>No reviews</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListReviews;","import React from 'react';\r\nimport BookInfo from '../components/BookInfo';\r\nimport ListReviews from '../components/ListReviews';\r\n\r\nfunction Book(props) {\r\n    return (\r\n        <div className=\"d-flex flex-row\">\r\n            <BookInfo {...props}/>\r\n            <ListReviews {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Book;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {getBook} from '../util/BookAPI';\r\nimport {addNewReview} from '../util/ReviewAPI';\r\n\r\nclass WriteReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            book: [],\r\n            review: {\r\n                title: '',\r\n                content: '',\r\n                rating: 0,\r\n            },\r\n            errorMessage: '',\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getBookInfo = (id) => {\r\n        getBook(id).then(info => {\r\n            if (info !== undefined) {\r\n                this.setState({\r\n                    book: info,\r\n                })\r\n            } else {\r\n                console.log('Error retrieving book.')\r\n            }\r\n        })\r\n    }\r\n    \r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            review: {\r\n                ...prevState.review,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const review = {\r\n            BookID: this.state.book.id,\r\n            UserID: localStorage.getItem('currentUser'),\r\n            BookTitle: this.state.book.volumeInfo.title,\r\n            Title: this.state.review.title,\r\n            Content: this.state.review.content,\r\n            Rating: this.state.review.Rating\r\n        }\r\n\r\n        // localStorage.getItem('token')\r\n        addNewReview(review).then(sentReview => {\r\n            if (sentReview.error !== undefined) {\r\n                console.log('ERROR ' + sentReview.error);\r\n            } else {\r\n                this.props.history.push(`/book/${this.state.book.id}`);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const bookid = this.getBookId();\r\n        this.getBookInfo(bookid);\r\n    }\r\n\r\n    render () {\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n                <form id='writeform' onSubmit={this.handleSubmit}>\r\n                    <h2>Write review</h2>\r\n                    \r\n                    <div className=\"col-auto\">\r\n                        <label className=\"form-label\">Rating</label><br/>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate1\" name=\"Rating\" value=\"1\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate1\">1</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate2\" name=\"Rating\" value=\"2\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate2\">2</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate3\" name=\"Rating\" value=\"3\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate3\">3</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate4\" name=\"Rating\" value=\"4\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate4\">4</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate5\" name=\"Rating\" value=\"5\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate5\">5</label><br/>\r\n                        <label for=\"reviewtitle\" className=\"form-label\">Title</label>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <input \r\n                            id=\"reviewtitle\"\r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"title\" \r\n                            label=\"Title\"\r\n                            value={this.state.review.title} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"contenttext\" className=\"form-label\">Your review</label>\r\n                        <textarea \r\n                        id=\"contenttext\"\r\n                        form=\"writeform\"\r\n                        className=\"form-control\"\r\n                        name=\"content\"\r\n                        value={this.state.review.content}\r\n                        onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-danger m-3\" type=\"submit\">Submit review</button>\r\n                </form>\r\n                </div>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(WriteReview);","import React from 'react';\r\nimport WriteReview from '../components/WriteReview';\r\n\r\nfunction NewReview(props) {\r\n    return (\r\n        <div>\r\n            <WriteReview />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewReview;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getSingleReview, editReview, deleteReview } from '../util/ReviewAPI';\r\nimport { getSingleUser} from '../util/UsersAPI';\r\nimport { getBook } from '../util/BookAPI';\r\n\r\n// TEST\r\n class ShowReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            review: [],\r\n            edits: '',\r\n            Rating: 0,\r\n            user: [],\r\n            book: [],\r\n            viewerWriter: false,\r\n            editing: false,\r\n            loading: true,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getReview = this.getReview.bind(this);\r\n        this.reviewEdit = this.reviewEdit.bind(this);\r\n        this.handleEditBtn = this.handleEditBtn.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleChange(event) {   \r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    getReviewId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const reviewId = splitLocation[splitLocation.length -1];\r\n        return reviewId;\r\n    }\r\n\r\n    getReview(id) {\r\n        getSingleReview(id).then(review => {\r\n            this.setState({\r\n              review: review,\r\n              loading: false,\r\n            });\r\n            this.getUser(review.UserID.id);\r\n            this.getBookData(review.BookID);\r\n            if (localStorage.getItem('currentUser') === review.UserID.id){\r\n                this.setState({\r\n                    viewerWriter: true,\r\n                    edits: review.Content,\r\n                })\r\n            }\r\n          });\r\n     }\r\n\r\n     // userinfo\r\n     getUser = (id) => {\r\n        if (this.state.review !== undefined) {\r\n           getSingleUser(id).then(user => {\r\n               this.setState((prev) => ({\r\n                   user\r\n               }))\r\n           })\r\n        } else {\r\n            setTimeout(this.getUser(id), 1000);\r\n        }\r\n    }\r\n\r\n    findUser = (id) => {\r\n        const n = this.state.user.findIndex(x => x.id === id);\r\n        const u = this.state.user[n];\r\n\r\n        if(u === undefined) {\r\n            return '';\r\n        } else {\r\n           return u.username;\r\n        }\r\n    }\r\n\r\n    getBookData = (id) => {\r\n        getBook(id).then(book => {\r\n            if (book !== undefined) {\r\n                this.setState({\r\n                    book\r\n                })\r\n            } else {\r\n                console.log('Error retrieving book.')\r\n            }\r\n        })\r\n    }\r\n\r\n    //  edit review (with token)\r\n    reviewEdit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            Title: this.state.review.Title,\r\n            Content: this.state.edits,\r\n            Rating: this.state.Rating\r\n        }\r\n\r\n        editReview(data, this.state.review.id)\r\n        .then((response) => {\r\n            if(response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEditBtn = (event) => {\r\n        event.preventDefault();\r\n        this.setState({editing: !this.state.editing});\r\n    }\r\n    \r\n    //  delete review (with token)\r\n    handleDelete = (event) => {\r\n        event.preventDefault();\r\n\r\n        deleteReview(this.state.review.id, localStorage.getItem('token')).then(response => {\r\n            if (response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                this.props.history.push(`/users/${localStorage.getItem('currentUser')}`);\r\n            }\r\n        })\r\n    }\r\n\r\n    // if editing, review content will be editable through a form\r\n    contentView = () => {\r\n        if (this.state.editing) {\r\n            return <div className=\"d-flex flex-column\">\r\n                <form id='editform' onSubmit={this.reviewEdit}>\r\n                    <div className=\"col-auto\">\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate1\" name=\"Rating\" value=\"1\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate1\">1</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate2\" name=\"Rating\" value=\"2\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate2\">2</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate3\" name=\"Rating\" value=\"3\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate3\">3</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate4\" name=\"Rating\" value=\"4\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate4\">4</label>\r\n                        <input className=\"me-1\" type=\"radio\" id=\"rate5\" name=\"Rating\" value=\"5\" onChange={this.handleChange}/>\r\n                        <label className=\"me-3\" for=\"rate5\">5</label><br/>\r\n                    </div>\r\n                    <div className=\"input-group mb-3\">\r\n                    <textarea \r\n                    id='reviewediting'\r\n                    form='editform'\r\n                    className=\"form-control mt-3\"\r\n                    name='edits'\r\n                    value={this.state.edits}\r\n                    onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-danger m-3\" type='submit'>Save</button>\r\n                </form>\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <p>{this.state.review.Rating}/5</p>\r\n                <p>{this.state.review.Content}</p>\r\n                <Link className=\"link-dark fw-bold\" to={`/users/${this.state.review.UserID.id}`}>{this.state.review.UserID.username}</Link>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    // edit and delete buttons (only visible for the user who wrote the review)\r\n    editBtn = () => {\r\n        if (this.state.viewerWriter && this.state.editing === false) {\r\n            return <div>\r\n                <button className=\"btn btn-danger m-3\" onClick={this.handleEditBtn}>Edit review</button>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    deleteBtn = () => {\r\n        if (this.state.viewerWriter) {\r\n            return <div><button className=\"btn btn-danger mt-5 m-3\" onClick={this.handleDelete}>Delete review</button></div>\r\n    }}\r\n\r\n    showCover = (book) => {\r\n        if (book.volumeInfo.imageLinks !== undefined){\r\n           return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n        } else {\r\n            return <p className=\"mt-3 mb-3\">No image available</p>\r\n        }\r\n    }\r\n\r\n    showBookAuthors = (book) => {\r\n        if (book.volumeInfo.authors !== undefined) {\r\n            return <div>{book.volumeInfo.authors.map((author) => {\r\n                return <p>{author}</p>\r\n            })}</div>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const reviewId = this.getReviewId();\r\n        this.getReview(reviewId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.review.Title !== undefined && this.state.book.volumeInfo !== undefined) {\r\n                return <div className=\"d-flex flex-row\">\r\n                    <div>\r\n                    <div className=\"p-2 m-3\">\r\n                        {this.showCover(this.state.book)}\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/book/${this.state.book.id}`}><h2>{this.state.book.volumeInfo.title}</h2></Link>\r\n                        {this.showBookAuthors(this.state.book)}\r\n                        {this.deleteBtn()}\r\n                    </div>\r\n                </div>\r\n                    <div className=\"p-5 w-100\">\r\n                        <h3>{this.state.review.Title}</h3>\r\n                        {this.contentView()}\r\n                        \r\n                        {this.editBtn()}\r\n                    </div>\r\n                        \r\n                    </div>\r\n            } else {\r\n                return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(ShowReview);","import React from 'react';\r\nimport ShowReview from '../components/ShowReview';\r\n\r\nfunction Review(props) {\r\n    return (\r\n        <div>\r\n            <ShowReview />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Review;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { deleteUser } from '../util/UsersAPI.js';\r\n\r\n class DeleteUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    removeUser = (id) => {\r\n        deleteUser(id).then(response => {\r\n            if (response.error !== undefined){\r\n                console.log('what ' + response.error);\r\n            } else {\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        event.preventDefault();\r\n        this.removeUser(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    render (){\r\n        return <div>\r\n            <button className=\"btn btn-danger m-3\" onClick={this.handleClick}>Delete user</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(DeleteUser);","import React from 'react';\r\nimport DeleteUser from '../components/DeleteUser';\r\n\r\nfunction Settings(props) {\r\n    return (\r\n        <div>\r\n            <h1>Settings</h1>\r\n            <DeleteUser />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Search from './views/Search';\nimport Login from './views/Login';\nimport Signup from './views/Signup';\nimport Profile from './views/Profile';\nimport Book from './views/Book';\nimport NewReview from './views/NewReview';\nimport Review from './views/Review';\nimport Settings from './views/Settings';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    }\n  }\n\n  // set the user in the state\n  setUser = (user) => {\n    this.setState({ user });\n  }\n  \n  render () {\n    return (\n      <div className=\"App\">\n        <div className='container'>\n\n          <Router basename=''>\n            <Header />\n            <Switch>\n              <Route exact path='/' render={(props) => (\n                <Search {...props}   />\n              )}></Route>\n              <Route exact path='/login' render={(props) => (\n                <Login {...props} state={this.state} setUser={this.setUser}/>\n              )}></Route>\n              <Route exact path='/signup' render={(props) => (\n                <Signup {...props} />\n              )}></Route>\n              <Route exact path='/users/:id' render={(props) => (\n                <Profile {...props} />\n              )}></Route>\n              <Route exact path='/book/:id' render={(props) => (\n                <Book {...props} />\n              )}></Route>\n              <Route exact path='/write/:id' render={(props) => (\n                <NewReview {...props} />\n              )}></Route>\n              <Route exact path='/review/:id' render={(props) => (\n                <Review {...props} />\n              )}></Route>\n              <Route exact path='/settings' render={(props) => (\n                <Settings {...props} />\n              )}></Route>\n  \n            </Switch>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}