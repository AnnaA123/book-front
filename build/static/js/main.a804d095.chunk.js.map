{"version":3,"sources":["components/Header.js","util/BookAPI.js","components/SearchBooks.js","components/BookSearch.js","views/Search.js","components/LoginForm.js","util/LoginAPI.js","views/Login.js","util/UsersAPI.js","components/SignupForm.js","views/Signup.js","components/UserProfile.js","util/ReviewAPI.js","components/ListUserReviews.js","views/Profile.js","components/BookInfo.js","components/ListReviews.js","views/Book.js","components/WriteReview.js","views/NewReview.js","components/ShowReview.js","views/Review.js","components/DeleteUser.js","views/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","localStorage","getItem","className","to","onClick","clear","apiUrl","getBook","id","fetch","then","response","json","SearchBooks","props","getBooks","terms","state","searchTitle","books","setState","items","loading","showThumbnail","book","undefined","volumeInfo","imageLinks","src","thumbnail","alt","title","componentDidMount","sTitle","bind","this","map","React","Component","BookSearch","toggler","prevState","toggle","searchResults","handleTitleSearch","event","preventDefault","console","log","byAuthor","handleChange","val","target","value","onSubmit","for","type","placeholder","name","onChange","Search","LoginForm","doLogin","username","password","settings","method","headers","body","JSON","stringify","login","user","userIsSet","setUser","setItem","token","_id","history","push","errorMessage","validUser","handleSubmit","label","Login","getSingleUser","catch","error","SignUpForm","checkPw","register","email","description","userCreated","Signup","SignupForm","UserProfile","getUserId","splitLocation","window","location","href","split","userId","length","getUser","edits","userProfile","editDescription","data","options","editUser","reload","userDescription","editing","form","handleEditBtn","editBtn","ListUserReviews","getReviews","reviews","review","Title","BookTitle","Profile","BookInfo","getBookId","getBookInfo","info","bookInfo","showBookAuthors","authors","author","showCover","bookid","componentWillUnmount","callback","authorKey","handleClick","ListReviews","bookId","prev","users","setTimeout","findUser","n","findIndex","x","u","UserID","Content","Book","WriteReview","addNewReview","BookID","content","sentReview","NewReview","ShowReview","getReviewId","getBookData","reviewEdit","editReview","handleDelete","contentView","viewerWriter","deleteBtn","getReview","reviewId","Review","DeleteUser","removeUser","deleteUser","Settings","App","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a804d095.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n function Header() {\r\n     if (localStorage.getItem('token') !== null) {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-danger\">\r\n                <div className='container-fluid'>\r\n                    <Link className='navbar-brand' to='/'>BookSight</Link>\r\n                        <div>\r\n                            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/' >Search</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link'  to={`/users/${localStorage.getItem('currentUser')}`} >Profile</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/settings'>Settings</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/login' onClick={() => {localStorage.clear()}}>Logout</Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n        \r\n     } else {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-danger\">\r\n                <div className='container-fluid'>\r\n                    <Link className='navbar-brand' to='/'>BookSight</Link>\r\n                        <div>\r\n                            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/' >Search</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/login' >Login</Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n     }\r\n}\r\n\r\nexport default withRouter(Header);","const apiUrl = 'https://www.googleapis.com/books';\r\n\r\nconst searchBooksByTitle = (terms) => {\r\n    return fetch(apiUrl + '/v1/volumes?q=search+' + terms).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst searchBooksByAuthor = (terms) => {\r\n    console.log('API terms: ' + terms)\r\n    return fetch(apiUrl + '/v1/volumes?q=inauthor+' + terms).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst getBook = (id) => {\r\n    return fetch(apiUrl + '/v1/volumes/' + id).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport { searchBooksByTitle, searchBooksByAuthor, getBook };","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { searchBooksByTitle, searchBooksByAuthor } from '../util/BookAPI';\r\n\r\n// list books from google books api with props from BookSearch.js\r\n class SearchBooks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n            searchTitle: props.sTitle,\r\n            loading: true,\r\n        }\r\n        this.getBooks = this.getBooks.bind(this);\r\n    }\r\n\r\n    getBooks = () => {\r\n        searchBooksByTitle(this.state.searchTitle).then(books => {\r\n            this.setState({\r\n                books: books.items,\r\n                loading: false,\r\n            });\r\n            });\r\n     }\r\n\r\n     showThumbnail = (book) => {\r\n         if (book.volumeInfo.imageLinks !== undefined){\r\n            return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n         } else {\r\n             return <p className=\"mt-3\">(No image available)</p>\r\n         }\r\n     }\r\n\r\n    componentDidMount = () => {\r\n        this.getBooks();\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.books !== undefined) {\r\n                return <div className=\"row row-cols-3\">{this.state.books.map((book) => {\r\n                    return <div className=\"col col-sm-4 border border-white\" key={book.id}>\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/book/${book.id}`} key={book.id}> \r\n                            <div>\r\n                                {this.showThumbnail(book)}\r\n                                <p>{ book.volumeInfo.title }</p>\r\n                            </div>\r\n                    </Link></div>\r\n                })}</div>\r\n            } else {\r\n                return <div>\r\n                    <p>No search results</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchBooks;","import React from 'react'\r\nimport SearchBooks from './SearchBooks';\r\n\r\n// search bar at /views/Search.js for searching books from google api\r\n class BookSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchTitle: '',\r\n            byAuthor: false,\r\n            toggle: false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTitleSearch = this.handleTitleSearch.bind(this);\r\n    }\r\n\r\n    // update the search results\r\n    toggler = () => {\r\n        this.setState(prevState => ({ toggle: !prevState.toggle }));\r\n    }\r\n\r\n    searchResults = () => {\r\n        if (this.state.toggle) {\r\n            return <div><SearchBooks sTitle={this.state.searchTitle}/></div>\r\n        }\r\n    }\r\n\r\n    handleTitleSearch = (event) => {\r\n        event.preventDefault();\r\n        console.log('searching ' + this.state.searchTitle);\r\n\r\n        this.setState(prevState => ({ byAuthor: false }));\r\n        this.toggler();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const val = event.target.value;\r\n\r\n        this.setState(() => ({\r\n            toggle: false,\r\n            searchTitle: val,\r\n        }));\r\n    }\r\n\r\n    render (){\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n            <form onSubmit={this.handleTitleSearch}>\r\n            <div className=\"row g-3 align-items-center mt-1\">\r\n                <div className=\"col-auto\">\r\n                    <label for=\"searchTitle\" className=\"col-form-label\">Search for books</label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                    <input \r\n                        className=\"form-control\" \r\n                        type=\"search\" \r\n                        placeholder=\"Search\" \r\n                        name='searchTitle'\r\n                        value={this.state.searchTitle} \r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n                </div></div>\r\n            </form>\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                {this.searchResults()}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default BookSearch;","import React from 'react';\r\nimport BookSearch from '../components/BookSearch';\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <BookSearch />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { login } from '../util/LoginAPI';\r\n\r\n//used in Login.js\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            errorMessage: '',\r\n            validUser: true,\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.doLogin = this.doLogin.bind(this);\r\n    }\r\n\r\n    //sends the info to LoginAPI.js, which sends and compares it to the database\r\n    doLogin = () => {\r\n        login(this.state.user.username, this.state.user.password).then(response => {\r\n            if (response.user !== undefined) {\r\n                const userIsSet = this.props.setUser(response.user);\r\n                localStorage.setItem('token', response.token);\r\n                localStorage.setItem('currentUser', response.user._id);\r\n                this.props.history.push('/');\r\n                return userIsSet;\r\n            } else {\r\n                this.setState({errorMessage: 'Username or password is incorrect.'});\r\n            }\r\n        })\r\n    };\r\n    \r\n    //input handling\r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.doLogin();\r\n    }\r\n    \r\n    render () {\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h1>Login</h1>\r\n                    <div className=\"mb-3\">\r\n                    <label for=\"username\" className=\"form-label\">Username</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control height=200px\"\r\n                        name=\"username\" \r\n                        id=\"username\" \r\n                        label=\"Username\"\r\n                        value={this.state.user.username}\r\n                        onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\"\r\n                        name=\"password\" \r\n                        id=\"password\" \r\n                        label=\"Password\"\r\n                        value={this.state.user.password}\r\n                        onChange={this.handleChange}\r\n                         />\r\n                    </div>\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Don't have an account yet? <Link to='/signup'>Sign up here!</Link></p>\r\n                        \r\n                        <p>{\"\\n\"}</p>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Login</button>\r\n                </form>\r\n                </div></div>\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm);","const apiUrl = 'https://booksight.jelastic.metropolia.fi/login';\r\n\r\nconst login = (username, password) => {\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({username, password})\r\n    }\r\n    return fetch(apiUrl, settings).then(response => {\r\n        return response.json();;\r\n    })\r\n}\r\n\r\nexport { login };","import React from 'react';\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nfunction Login(props) {\r\n    return (\r\n        <div>\r\n            <LoginForm setUser={props.setUser} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","const apiUrl = 'https://booksight.jelastic.metropolia.fi/user';\r\n\r\nconst getSingleUser = (id) => {\r\n    return fetch(apiUrl + '/' + id).then(response => {\r\n        return response.json();\r\n    }).catch(error => console.error('Error:', error));;\r\n}\r\n\r\n//add a new user at SignUpForm.js\r\nconst register = (user) => {\r\n    const settings = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    };\r\n    return fetch(apiUrl, settings).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst editUser = (data, id, token) => {\r\n    const options = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'authorization': 'bearer ' + token,\r\n        },\r\n        body: JSON.stringify(data),\r\n    };\r\n    return fetch(apiUrl + '/' + id, options).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst deleteUser = (id, token) => {\r\n    const options = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'authorization': 'bearer ' + token,\r\n        },\r\n    };\r\n    return fetch(apiUrl + '/' + id, options).then(response => {\r\n        return response.json();\r\n    })\r\n} \r\n\r\nexport { getSingleUser, register, editUser, deleteUser };","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { register } from '../util/UsersAPI';\r\n\r\n//used in Signup.js\r\n\r\nclass SignUpForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                checkPw: '',\r\n            },\r\n            errorMessage: '',\r\n            userCreated: false,\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    //sends submit info to UsersAPI.js to register, if it doesnt work, adds an error message to the page\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.user.password === this.state.user.checkPw) {\r\n            const user = {\r\n                username: this.state.user.username,\r\n                email: this.state.user.email,\r\n                password: this.state.user.password,\r\n                description: 'Welcome to my profile!',\r\n            }\r\n\r\n            register(user).then(user => {\r\n                if (user.error !== undefined) {\r\n                    this.setState({ errorMessage: 'Cannot signup. Username, password or email needs to be changed.' })\r\n                } else {\r\n                    this.setState({ userCreated: true });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errorMessage: 'Passwords do not match.' })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.state.userCreated) {\r\n            return <div>\r\n                <p>User has been successfully created.</p>\r\n                <Link to='/login'>Back to Login page</Link>\r\n            </div>\r\n        } else {\r\n        return <div className=\"container\">\r\n            <div className=\" d-inline-flex\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h1>Sign Up</h1>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"username\">Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"username\" \r\n                            value={this.state.username} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"email\">Email Address</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            name=\"password\" \r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div for=\"checkPw\" className=\"mb-3\">\r\n                        <label>Password again</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            name=\"checkPw\"\r\n                            value={this.state.checkPw} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Already have an account? <Link to='/login'>Login here!</Link></p>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Sign Up</button>\r\n                </form>\r\n                </div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUpForm);","import React from 'react';\r\nimport SignupForm from '../components/SignupForm';\r\n\r\nfunction Signup(props) {\r\n    return (\r\n        <div>\r\n            <SignupForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {getSingleUser, editUser} from '../util/UsersAPI.js';\r\n\r\n class UserProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: [],\r\n            edits: '',\r\n            editing: false,\r\n            userProfile: false,\r\n            loading: true,\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleEditBtn = this.handleEditBtn.bind(this);\r\n    }\r\n\r\n    handleChange(event) {   \r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    getUserId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const userId = splitLocation[splitLocation.length -1];\r\n        console.log('USERID ' + userId)\r\n        return userId;\r\n    }\r\n\r\n    getUser = (id) => {\r\n        getSingleUser(id).then((user) => {\r\n            this.setState({\r\n                user: user,\r\n                edits: user.description,\r\n                loading: false,\r\n            })\r\n            if (user._id === localStorage.getItem('currentUser')) {\r\n                this.setState({\r\n                    userProfile: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    editDescription = (event) => {\r\n        event.preventDefault();\r\n\r\n        const edited = {\r\n            description: this.state.edits\r\n        }\r\n\r\n        editUser(edited, localStorage.getItem('currentUser'), localStorage.getItem('token')).then(response => {\r\n            if (response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                console.log('success');\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    userDescription = () => {\r\n        if (this.state.editing) {\r\n            return <div className=\"d-flex flex-column\">\r\n            <form id='descform' onSubmit={this.editDescription}>\r\n                <div className=\"mb-3\">\r\n                <textarea \r\n                form='descform'\r\n                className=\"form-control\"\r\n                name='edits'\r\n                value={this.state.edits}\r\n                onChange={this.handleChange}></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-danger m-3\" type='submit'>Save</button>\r\n            </form>\r\n            </div>\r\n        } else {\r\n            return <div><p>{this.state.user.description}</p></div>\r\n        }\r\n    }\r\n\r\n    handleEditBtn = (event) => {\r\n        event.preventDefault();\r\n        this.setState({editing: !this.state.editing});\r\n    }\r\n\r\n    editBtn = () => {\r\n        if (this.state.userProfile && this.state.editing === false) {\r\n            return <div>\r\n                <button className=\"btn btn-danger m-3\" onClick={this.handleEditBtn}>Edit profile</button>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = this.getUserId();\r\n        this.getUser(userId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.user !== undefined) {\r\n                return <div  className=\"p-5 w-100\">\r\n                    <h2>{this.state.user.username}</h2>\r\n                    {this.userDescription()}\r\n                    {this.editBtn()}\r\n                    </div>\r\n            } else {\r\n                return <div>\r\n                        <p>This user does not exist</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(UserProfile);","const apiUrl = 'https://booksight.jelastic.metropolia.fi/review';\r\n\r\nconst getAllBookReviews = (bookId) => {\r\n    return fetch(apiUrl + '?book=' + bookId).then(response => {\r\n        return response.json();;\r\n    })\r\n}\r\n\r\nconst getAllUserReviews = (userId) => {\r\n    return fetch(apiUrl + '?user=' + userId).then(response => {\r\n        return response.json();;\r\n    })\r\n}\r\n\r\nconst getSingleReview = (reviewId) => {\r\n    return fetch(apiUrl + '/' + reviewId).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst addNewReview = (data, token) => {\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'authorization': 'bearer ' + token,\r\n        },\r\n        body: JSON.stringify(data),\r\n    };\r\n    return fetch(apiUrl, options).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst editReview = (data, id, token) => {\r\n    const options = {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'authorization': 'bearer ' + token,\r\n        },\r\n        body: JSON.stringify(data),\r\n    };\r\n    return fetch(apiUrl + '/' + id, options).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst deleteReview = (id, token) => {\r\n    console.log('YES ' + id + token);\r\n    const options = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'authorization': 'bearer ' + token,\r\n        },\r\n    };\r\n    return fetch(apiUrl + '/' + id, options).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport { \r\n    getAllBookReviews, \r\n    getAllUserReviews, \r\n    getSingleReview, \r\n    addNewReview, \r\n    editReview, \r\n    deleteReview \r\n};","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllUserReviews } from '../util/ReviewAPI';\r\n\r\n// for /views/Profile.js\r\n class ListUserReviews extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews: [],\r\n            loading: true,\r\n        }\r\n        this.getReviews = this.getReviews.bind(this);\r\n    }\r\n\r\n    getUserId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const userId = splitLocation[splitLocation.length -1];\r\n        console.log('USERID ' + userId)\r\n        return userId;\r\n    }\r\n\r\n    getReviews = (id) => {\r\n        getAllUserReviews(id).then(reviews => {\r\n            this.setState({\r\n              reviews,\r\n              loading: false,\r\n            });\r\n          });\r\n     }\r\n\r\n    componentDidMount() {\r\n        //const userId = localStorage.getItem('currentUser');\r\n        const userId = this.getUserId();\r\n        this.getReviews(userId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.reviews[0] !== undefined) {\r\n                return <div className=\"p-2 w-100\">\r\n                    <h4 className=\"mt-3\">Reviews by this user:</h4>\r\n                {this.state.reviews.map((review) => {\r\n                    return <div className=\"mb-3 border-top border-dark\" key={review._id}>\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/review/${review._id}`}>\r\n                            <div>\r\n                                <h5 className=\"mt-2\">\r\n                                    { review.Title }\r\n                                </h5>\r\n                                <p className=\"small\">{review.BookTitle}</p>\r\n                            </div>\r\n                        </Link></div>\r\n                })} </div>\r\n            } else {\r\n                return <div>\r\n                        <p>No reviews</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListUserReviews;","import React from 'react';\r\nimport UserProfile from '../components/UserProfile';\r\nimport ListUserReviews from './../components/ListUserReviews';\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className=\"d-flex flex-row\">\r\n            <UserProfile />\r\n            <ListUserReviews />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {getBook} from '../util/BookAPI';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n// fetch info about a specific book from google books\r\n// at /views/Book.js\r\n class BookInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookInfo: [],\r\n            loading: true,\r\n            authorKey: 0,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getBookInfo = (id) => {\r\n        getBook(id).then(info => {\r\n            if (info !== undefined) {\r\n                this.setState({\r\n                    bookInfo: info,\r\n                    loading: false\r\n                })\r\n            } else {\r\n                console.log('Error retrieving data.')\r\n            }\r\n        })\r\n    }\r\n\r\n    showBookAuthors = (book) => {\r\n        if (book.volumeInfo.authors !== undefined) {\r\n            return <div>{book.volumeInfo.authors.map((author) => {\r\n                return <p>{author}</p>\r\n            })}</div>\r\n        }\r\n    }\r\n\r\n    showCover = (book) => {\r\n        if (book.volumeInfo.imageLinks !== undefined){\r\n           return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n        } else {\r\n            return <p className=\"mt-3 mb-3\">No image available</p>\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n\r\n        this.props.history.push('/write');\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const bookid = this.getBookId();\r\n        this.getBookInfo(bookid);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.setState = (state,callback)=>{\r\n            return;\r\n        };\r\n    }\r\n\r\n    render (){\r\n        if(this.state.loading) {\r\n            return <div>\r\n                    <p>Loading...</p>\r\n                </div>\r\n        } else {\r\n            if (this.state.bookInfo.volumeInfo === undefined){\r\n                return <div><p>error</p></div>\r\n            } else {\r\n                return <div className=\"p-2 m-3\">\r\n                <div>\r\n                    {this.showCover(this.state.bookInfo)}\r\n                    <h3>{this.state.bookInfo.volumeInfo.title}</h3>\r\n                    {this.showBookAuthors(this.state.bookInfo)}\r\n                    <Link className=\"link-danger text-decoration-none\" to={`/write/${this.state.bookInfo.id}`}>Write review</Link>\r\n                </div>\r\n                </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(BookInfo);","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllBookReviews } from '../util/ReviewAPI';\r\nimport { getSingleUser } from '../util/UsersAPI';\r\n\r\n// for /views/Book.js\r\n class ListReviews extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews: [],\r\n            users: [],\r\n            loading: true,\r\n        }\r\n        this.getReviews = this.getReviews.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        console.log('review BOOKID ' + bookId)\r\n        return bookId;\r\n    }\r\n\r\n    getReviews(id) {\r\n        getAllBookReviews(id).then(reviews => {\r\n            this.setState({\r\n              reviews,\r\n              loading: false,\r\n            });\r\n            // userinfo abt reviews\r\n            reviews.map((review) => {\r\n                return this.getUser(review.UserID);\r\n            })\r\n          });\r\n        \r\n     }\r\n\r\n     // get username \r\n     getUser = (id) => {\r\n         if (this.state.reviews[0] !== undefined) {\r\n            getSingleUser(id).then(user => {\r\n                this.setState((prev) => ({\r\n                    users: [...prev.users, user]\r\n                }))\r\n            })\r\n         } else {\r\n             setTimeout(this.getUser(id), 1000);\r\n         }\r\n     }\r\n\r\n     findUser = (id) => {\r\n         const n = this.state.users.findIndex(x => x._id === id);\r\n         const u = this.state.users[n];\r\n\r\n         if(u === undefined) {\r\n             return '';\r\n         } else {\r\n            return u.username;\r\n         }\r\n     }\r\n\r\n    componentDidMount() {\r\n        const bookId = this.getBookId();\r\n        this.getReviews(bookId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.reviews[0] !== undefined) {\r\n                return <div className=\"p-5 w-100 flex-column\">{this.state.reviews.map((review) => {\r\n                    return <div className=\"mb-3 border-bottom border-dark\" key={review._id}>\r\n                    <div className=\"mb-3 \">\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/review/${review._id}`}><h3>{ review.Title }</h3></Link>\r\n                        <p>{ review.Content }</p>\r\n                        <Link className=\"link-dark fw-bold\" to={`/users/${review.UserID}`}>{ this.findUser(review.UserID) }</Link>\r\n                    </div></div>\r\n                })}</div>\r\n            } else {\r\n                return <div>\r\n                        <p>No reviews</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListReviews;","import React from 'react';\r\nimport BookInfo from '../components/BookInfo';\r\nimport ListReviews from '../components/ListReviews';\r\n\r\nfunction Book(props) {\r\n    console.log('BOOKJSprops: ' + JSON.stringify(props));\r\n    return (\r\n        <div className=\"d-flex flex-row\">\r\n            <BookInfo {...props}/>\r\n            <ListReviews {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Book;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {getBook} from '../util/BookAPI';\r\nimport {addNewReview} from '../util/ReviewAPI';\r\n\r\nclass WriteReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            book: [],\r\n            review: {\r\n                title: '',\r\n                content: '',\r\n            },\r\n            errorMessage: '',\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getBookInfo = (id) => {\r\n        getBook(id).then(info => {\r\n            if (info !== undefined) {\r\n                this.setState({\r\n                    book: info,\r\n                })\r\n            } else {\r\n                console.log('Error retrieving book.')\r\n            }\r\n        })\r\n    }\r\n    \r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            review: {\r\n                ...prevState.review,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const review = {\r\n            BookID: this.state.book.id,\r\n            UserID: localStorage.getItem('currentUser'),\r\n            BookTitle: this.state.book.volumeInfo.title,\r\n            Title: this.state.review.title,\r\n            Content: this.state.review.content\r\n        }\r\n\r\n        addNewReview(review, localStorage.getItem('token')).then(sentReview => {\r\n            if (sentReview.error !== undefined) {\r\n                console.log('ERROR ' + sentReview.error);\r\n            } else {\r\n                this.props.history.push(`/book/${this.state.book.id}`);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const bookid = this.getBookId();\r\n        this.getBookInfo(bookid);\r\n    }\r\n\r\n    render () {\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n                <form id='writeform' onSubmit={this.handleSubmit}>\r\n                    <h2>Write review</h2>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"reviewtitle\" className=\"form-label\">Title</label>\r\n                        <input \r\n                            id=\"reviewtitle\"\r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"title\" \r\n                            label=\"Title\"\r\n                            value={this.state.review.title} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"contenttext\" className=\"form-label\">Your review</label>\r\n                        <textarea \r\n                        id=\"contenttext\"\r\n                        form='writeform'\r\n                        className=\"form-control\"\r\n                        name='content'\r\n                        value={this.state.review.content}\r\n                        onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-danger m-3\" type=\"submit\">Submit review</button>\r\n                </form>\r\n                </div>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(WriteReview);","import React from 'react';\r\nimport WriteReview from '../components/WriteReview';\r\n\r\nfunction NewReview(props) {\r\n    return (\r\n        <div>\r\n            <WriteReview />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewReview;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getSingleReview, editReview, deleteReview } from '../util/ReviewAPI';\r\nimport { getSingleUser} from '../util/UsersAPI';\r\nimport { getBook } from '../util/BookAPI';\r\n\r\n// TEST\r\n class ShowReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            review: [],\r\n            edits: '',\r\n            user: [],\r\n            book: [],\r\n            viewerWriter: false,\r\n            editing: false,\r\n            loading: true,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getReview = this.getReview.bind(this);\r\n        this.reviewEdit = this.reviewEdit.bind(this);\r\n        this.handleEditBtn = this.handleEditBtn.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleChange(event) {   \r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    getReviewId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const reviewId = splitLocation[splitLocation.length -1];\r\n        return reviewId;\r\n    }\r\n\r\n    getReview(id) {\r\n        getSingleReview(id).then(review => {\r\n            this.setState({\r\n              review,\r\n              loading: false,\r\n              edits: review.Content,\r\n            });\r\n            console.log(review);\r\n            this.getUser(review.UserID);\r\n            this.getBookData(review.BookID);\r\n            if (localStorage.getItem('currentUser') === review.UserID){\r\n                this.setState({\r\n                    viewerWriter: true,\r\n                })\r\n            }\r\n          });\r\n     }\r\n\r\n     // userinfo\r\n     getUser = (id) => {\r\n        if (this.state.review !== undefined) {\r\n           getSingleUser(id).then(user => {\r\n               this.setState((prev) => ({\r\n                   user\r\n               }))\r\n           })\r\n        } else {\r\n            setTimeout(this.getUser(id), 1000);\r\n        }\r\n    }\r\n\r\n    findUser = (id) => {\r\n        const n = this.state.user.findIndex(x => x._id === id);\r\n        const u = this.state.user[n];\r\n\r\n        if(u === undefined) {\r\n            return '';\r\n        } else {\r\n           return u.username;\r\n        }\r\n    }\r\n\r\n    getBookData = (id) => {\r\n        getBook(id).then(book => {\r\n            if (book !== undefined) {\r\n                this.setState({\r\n                    book\r\n                })\r\n            } else {\r\n                console.log('Error retrieving book.')\r\n            }\r\n        })\r\n    }\r\n\r\n    //  edit review (with token)\r\n    reviewEdit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            Content: this.state.edits\r\n        }\r\n\r\n        editReview(data, this.state.review._id, localStorage.getItem('token'))\r\n        .then((response) => {\r\n            if(response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEditBtn = (event) => {\r\n        event.preventDefault();\r\n        this.setState({editing: !this.state.editing});\r\n    }\r\n    \r\n    //  delete review (with token)\r\n    handleDelete = (event) => {\r\n        event.preventDefault();\r\n\r\n        deleteReview(this.state.review._id, localStorage.getItem('token')).then(response => {\r\n            if (response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                console.log('deleted ' + JSON.stringify(this.props));\r\n                this.props.history.push(`/user/${localStorage.getItem('currentUser')}`);\r\n            }\r\n        })\r\n    }\r\n\r\n    // if editing, review content will be editable through a form\r\n    contentView = () => {\r\n        if (this.state.editing) {\r\n            return <div className=\"d-flex flex-column\">\r\n                <form id='editform' onSubmit={this.reviewEdit}>\r\n                    <div className=\"input-group mb-3\">\r\n                    <textarea \r\n                    form='editform'\r\n                    className=\"form-control\"\r\n                    name='edits'\r\n                    value={this.state.edits}\r\n                    onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-danger m-3\" type='submit'>Save</button>\r\n                </form>\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <p>{this.state.review.Content}</p>\r\n                <Link className=\"link-dark fw-bold\" to={`/users/${this.state.user._id}`}>{this.state.user.username}</Link>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    // edit and delete buttons (only visible for the user who wrote the review)\r\n    editBtn = () => {\r\n        if (this.state.viewerWriter && this.state.editing === false) {\r\n            return <div>\r\n                <button className=\"btn btn-danger m-3\" onClick={this.handleEditBtn}>Edit review</button>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    deleteBtn = () => {\r\n        if (this.state.viewerWriter) {\r\n            return <div><button className=\"btn btn-danger mt-5 m-3\" onClick={this.handleDelete}>Delete review</button></div>\r\n    }}\r\n\r\n    showCover = (book) => {\r\n        if (book.volumeInfo.imageLinks !== undefined){\r\n           return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n        } else {\r\n            return <p className=\"mt-3 mb-3\">No image available</p>\r\n        }\r\n    }\r\n\r\n    showBookAuthors = (book) => {\r\n        if (book.volumeInfo.authors !== undefined) {\r\n            return <div>{book.volumeInfo.authors.map((author) => {\r\n                return <p>{author}</p>\r\n            })}</div>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const reviewId = this.getReviewId();\r\n        this.getReview(reviewId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.review.Title !== undefined && this.state.book.volumeInfo !== undefined) {\r\n                return <div className=\"d-flex flex-row\">\r\n                    <div>\r\n                    <div className=\"p-2 m-3\">\r\n                        {this.showCover(this.state.book)}\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/book/${this.state.book.id}`}><h2>{this.state.book.volumeInfo.title}</h2></Link>\r\n                        {this.showBookAuthors(this.state.book)}\r\n                        {this.deleteBtn()}\r\n                    </div>\r\n                </div>\r\n                    <div className=\"p-5 w-100\">\r\n                        <h3>{this.state.review.Title}</h3>\r\n                        {this.contentView()}\r\n                        \r\n                        {this.editBtn()}\r\n                    </div>\r\n                        \r\n                    </div>\r\n            } else {\r\n                return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(ShowReview);","import React from 'react';\r\nimport ShowReview from '../components/ShowReview';\r\n\r\nfunction Review(props) {\r\n    return (\r\n        <div>\r\n            <ShowReview />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Review;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { deleteUser } from '../util/UsersAPI.js';\r\n\r\n class DeleteUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    removeUser = (id) => {\r\n        deleteUser(id, localStorage.getItem('token')).then(response => {\r\n            if (response.error !== undefined){\r\n                console.log('what ' + response.error);\r\n            } else {\r\n                console.log('successful deletion');\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        event.preventDefault();\r\n        this.removeUser(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    render (){\r\n        return <div>\r\n            <button className=\"btn btn-danger m-3\" onClick={this.handleClick}>Delete user</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(DeleteUser);","import React from 'react';\r\nimport DeleteUser from '../components/DeleteUser';\r\n\r\nfunction Settings(props) {\r\n    return (\r\n        <div>\r\n            <h1>Settings</h1>\r\n            <DeleteUser />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Search from './views/Search';\nimport Login from './views/Login';\nimport Signup from './views/Signup';\nimport Profile from './views/Profile';\nimport Book from './views/Book';\nimport NewReview from './views/NewReview';\nimport Review from './views/Review';\nimport Settings from './views/Settings';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    }\n  }\n\n  // set the user in the state\n  setUser = (user) => {\n    this.setState({ user });\n  }\n  \n  render () {\n    return (\n      <div className=\"App\">\n        <div className='container'>\n\n          <Router basename=''>\n            <Header />\n            <Switch>\n              <Route exact path='/' render={(props) => (\n                <Search {...props}   />\n              )}></Route>\n              <Route exact path='/login' render={(props) => (\n                <Login {...props} state={this.state} setUser={this.setUser}/>\n              )}></Route>\n              <Route exact path='/signup' render={(props) => (\n                <Signup {...props} />\n              )}></Route>\n              <Route exact path='/users/:id' render={(props) => (\n                <Profile {...props} />\n              )}></Route>\n              <Route exact path='/book/:id' render={(props) => (\n                <Book {...props} />\n              )}></Route>\n              <Route exact path='/write/:id' render={(props) => (\n                <NewReview {...props} />\n              )}></Route>\n              <Route exact path='/review/:id' render={(props) => (\n                <Review {...props} />\n              )}></Route>\n              <Route exact path='/settings' render={(props) => (\n                <Settings {...props} />\n              )}></Route>\n  \n            </Switch>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}