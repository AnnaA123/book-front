{"version":3,"sources":["components/Header.js","util/BookAPI.js","components/SearchBooks.js","components/BookSearch.js","views/Search.js","util/fetchGQL.js","util/LoginAPI.js","components/LoginForm.js","views/Login.js","util/UsersAPI.js","components/SignupForm.js","views/Signup.js","components/UserProfile.js","util/ReviewAPI.js","components/ListUserReviews.js","views/Profile.js","components/BookInfo.js","components/ListReviews.js","views/Book.js","components/WriteReview.js","views/NewReview.js","components/ShowReview.js","views/Review.js","components/DeleteUser.js","views/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","localStorage","getItem","className","to","onClick","clear","apiUrl","getBook","id","fetch","then","response","json","SearchBooks","props","getBooks","terms","state","searchTitle","books","setState","items","loading","showThumbnail","book","undefined","volumeInfo","imageLinks","src","thumbnail","alt","title","componentDidMount","sTitle","bind","this","map","React","Component","BookSearch","toggler","prevState","toggle","searchResults","handleTitleSearch","event","preventDefault","byAuthor","handleChange","val","target","value","onSubmit","for","type","placeholder","name","onChange","Search","fetchGraphql","query","a","options","method","headers","Accept","authorization","body","JSON","stringify","data","console","log","login","user","queryA","username","password","LoginForm","doLogin","u","userIsSet","setUser","setItem","token","history","push","errorMessage","validUser","handleSubmit","htmlFor","label","Login","getSingleUser","register","queryB","email","description","signup","editUser","queryC","modifyUser","deleteUser","queryE","SignUpForm","checkPw","error","userCreated","Signup","SignupForm","UserProfile","getUserId","splitLocation","window","location","href","split","length","getUser","edits","userProfile","editDescription","edited","reload","userDescription","editing","form","handleEditBtn","editBtn","userId","getAllBookReviews","BookID","reviewsByBook","getAllUserReviews","UserID","reviewsByUser","getSingleReview","review","addNewReview","queryD","BookTitle","Title","Content","addReview","editReview","modifyReview","deleteReview","queryF","ListUserReviews","getReviews","reviews","Profile","BookInfo","getBookId","getBookInfo","info","bookInfo","showBookAuthors","authors","author","showCover","writeReview","bookid","componentWillUnmount","callback","authorKey","handleClick","ListReviews","users","bookId","Book","WriteReview","content","sentReview","NewReview","ShowReview","getReviewId","prev","setTimeout","findUser","n","findIndex","x","getBookData","reviewEdit","handleDelete","contentView","viewerWriter","deleteBtn","getReview","reviewId","Review","DeleteUser","removeUser","Settings","App","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ebb8f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n function Header() {\r\n     if (localStorage.getItem('token') !== null) {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-danger\">\r\n                <div className='container-fluid'>\r\n                    <Link className='navbar-brand' to='/'>BookSide</Link>\r\n                        <div>\r\n                            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/' >Search</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link'  to={`/users/${localStorage.getItem('currentUser')}`} >Profile</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/settings'>Settings</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/login' onClick={() => {localStorage.clear()}}>Logout</Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n        \r\n     } else {\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-danger\">\r\n                <div className='container-fluid'>\r\n                    <Link className='navbar-brand' to='/'>BookSight</Link>\r\n                        <div>\r\n                            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/' >Search</Link>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <Link className='nav-link' to='/login' >Login</Link>\r\n                                </li>\r\n                            </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n     }\r\n}\r\n\r\nexport default withRouter(Header);","const apiUrl = 'https://www.googleapis.com/books';\r\n\r\nconst searchBooksByTitle = (terms) => {\r\n    return fetch(apiUrl + '/v1/volumes?q=search+' + terms).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst searchBooksByAuthor = (terms) => {\r\n    return fetch(apiUrl + '/v1/volumes?q=inauthor+' + terms).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nconst getBook = (id) => {\r\n    return fetch(apiUrl + '/v1/volumes/' + id).then(response => {\r\n        return response.json();\r\n    })\r\n}\r\n\r\nexport { searchBooksByTitle, searchBooksByAuthor, getBook };","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { searchBooksByTitle, searchBooksByAuthor } from '../util/BookAPI';\r\n\r\n// list books from google books api with props from BookSearch.js\r\n class SearchBooks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            books: [],\r\n            searchTitle: props.sTitle,\r\n            loading: true,\r\n        }\r\n        this.getBooks = this.getBooks.bind(this);\r\n    }\r\n\r\n    getBooks = () => {\r\n        searchBooksByTitle(this.state.searchTitle).then(books => {\r\n            this.setState({\r\n                books: books.items,\r\n                loading: false,\r\n            });\r\n            });\r\n     }\r\n\r\n     showThumbnail = (book) => {\r\n         if (book.volumeInfo.imageLinks !== undefined){\r\n            return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n         } else {\r\n             return <p className=\"mt-3\">(No image available)</p>\r\n         }\r\n     }\r\n\r\n    componentDidMount = () => {\r\n        this.getBooks();\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.books !== undefined) {\r\n                return <div className=\"row row-cols-3\">{this.state.books.map((book) => {\r\n                    return <div className=\"col col-sm-4 border border-white\" key={book.id}>\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/book/${book.id}`} key={book.id}> \r\n                            <div>\r\n                                {this.showThumbnail(book)}\r\n                                <p>{ book.volumeInfo.title }</p>\r\n                            </div>\r\n                    </Link></div>\r\n                })}</div>\r\n            } else {\r\n                return <div>\r\n                    <p>No search results</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchBooks;","import React from 'react'\r\nimport SearchBooks from './SearchBooks';\r\n\r\n// search bar at /views/Search.js for searching books from google api\r\n class BookSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchTitle: '',\r\n            byAuthor: false,\r\n            toggle: false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleTitleSearch = this.handleTitleSearch.bind(this);\r\n    }\r\n\r\n    // update the search results\r\n    toggler = () => {\r\n        this.setState(prevState => ({ toggle: !prevState.toggle }));\r\n    }\r\n\r\n    searchResults = () => {\r\n        if (this.state.toggle) {\r\n            return <div><SearchBooks sTitle={this.state.searchTitle}/></div>\r\n        }\r\n    }\r\n\r\n    handleTitleSearch = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => ({ byAuthor: false }));\r\n        this.toggler();\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const val = event.target.value;\r\n\r\n        this.setState(() => ({\r\n            toggle: false,\r\n            searchTitle: val,\r\n        }));\r\n    }\r\n\r\n    render (){\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n            <form onSubmit={this.handleTitleSearch}>\r\n            <div className=\"row g-3 align-items-center mt-1\">\r\n                <div className=\"col-auto\">\r\n                    <label for=\"searchTitle\" className=\"col-form-label\">Search for books</label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                    <input \r\n                        className=\"form-control\" \r\n                        type=\"search\" \r\n                        placeholder=\"Search\" \r\n                        name='searchTitle'\r\n                        value={this.state.searchTitle} \r\n                        onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n                </div></div>\r\n            </form>\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                {this.searchResults()}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default BookSearch;","import React from 'react';\r\nimport BookSearch from '../components/BookSearch';\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <BookSearch />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","const fetchGraphql = async (query) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        authorization: 'bearer ' + localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify(query),\r\n      \r\n    };\r\n    try {\r\n      const response = await fetch(\r\n        \"https://booksight.jelastic.metropolia.fi/graphql\",\r\n        options\r\n      );\r\n      const json = await response.json();\r\n      return json.data;\r\n    } catch (e) {\r\n      console.log(e);\r\n      return false;\r\n    }\r\n  };\r\n\r\nexport {fetchGraphql};","import {fetchGraphql} from './fetchGQL.js';\r\n\r\nconst login = async (user) => {\r\n    const queryA = {\r\n        query:`\r\n            {\r\n                login(\r\n                username: \"${user.username}\",\r\n                password: \"${user.password}\"\r\n                ) {\r\n                id,\r\n                username,\r\n                token\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryA);\r\n    return data.login;\r\n}\r\n\r\nexport { login };","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { login } from '../util/LoginAPI';\r\n\r\n//used in Login.js\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: '',\r\n            },\r\n            errorMessage: '',\r\n            validUser: true,\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.doLogin = this.doLogin.bind(this);\r\n    }\r\n\r\n    //sends the info to LoginAPI.js, which sends and compares it to the database\r\n    doLogin = () => {\r\n        const u = {\r\n            username: this.state.user.username,\r\n            password:  this.state.user.password\r\n        }\r\n        login(u).then(response => {\r\n            if (response !== null) {\r\n                if (response.username !== undefined) {\r\n                    const userIsSet = this.props.setUser(response);\r\n                    localStorage.setItem('token', response.token);\r\n                    localStorage.setItem('currentUser', response.id);\r\n                    this.props.history.push('/');\r\n                    return userIsSet;\r\n                } else {\r\n                    this.setState({errorMessage: 'Username or password is incorrect.'});\r\n                }\r\n            } else {\r\n                this.setState({errorMessage: 'Something went wrong'});\r\n            }\r\n        })\r\n    };\r\n    \r\n    //input handling\r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.doLogin();\r\n    }\r\n    \r\n    render () {\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h1>Login</h1>\r\n                    <div className=\"mb-3\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control height=200px\"\r\n                        name=\"username\" \r\n                        id=\"username\" \r\n                        label=\"Username\"\r\n                        value={this.state.user.username}\r\n                        onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\"\r\n                        name=\"password\" \r\n                        id=\"password\" \r\n                        label=\"Password\"\r\n                        value={this.state.user.password}\r\n                        onChange={this.handleChange}\r\n                         />\r\n                    </div>\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Don't have an account yet? <Link to='/signup'>Sign up here!</Link></p>\r\n                        \r\n                        <p>{\"\\n\"}</p>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Login</button>\r\n                </form>\r\n                </div></div>\r\n    }\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from 'react';\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nfunction Login(props) {\r\n    return (\r\n        <div>\r\n            <LoginForm setUser={props.setUser} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import {fetchGraphql} from './fetchGQL.js';\r\n\r\nconst getSingleUser = async (id) => {\r\n    const queryA = {\r\n        query:`\r\n             {\r\n                user(id: \"${id}\"){\r\n                    id, \r\n                    username,\r\n                    email,\r\n                    description\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryA);\r\n    return data.user;\r\n}\r\n\r\n//add a new user at SignUpForm.js\r\nconst register = async (user) => {\r\n    const queryB = {\r\n        query:`\r\n            mutation {\r\n                signup(\r\n                username: \"${user.username}\", \r\n                password: \"${user.password}\", \r\n                email: \"${user.email}\",\r\n                description: \"${user.description}\",\r\n                ){\r\n                id, \r\n                username\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryB);\r\n    return data.signup;\r\n}\r\n\r\nconst editUser = async (user, id) => {\r\n    const queryC = {\r\n        query:`\r\n            mutation {\r\n                modifyUser(\r\n                id: \"${id}\",\r\n                username: \"${user.username}\",\r\n                email: \"${user.email}\",\r\n                description: \"${user.description}\",\r\n                ) {\r\n                id, \r\n                username,\r\n                description\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryC);\r\n    return data.modifyUser;\r\n}\r\n\r\nconst deleteUser = async (id) => {\r\n    const queryE = {\r\n        query:`\r\n            mutation {\r\n                deleteUser(id: \"${id}\"){\r\n                    id\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryE);\r\n    return data.deleteUser;\r\n}\r\n\r\n\r\nexport { getSingleUser, register, editUser, deleteUser };","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { register } from '../util/UsersAPI';\r\n\r\n//used in Signup.js\r\n\r\nclass SignUpForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                email: '',\r\n                password: '',\r\n                checkPw: '',\r\n            },\r\n            errorMessage: '',\r\n            userCreated: false,\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            user: {\r\n                ...prevState.user,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    //sends submit info to UsersAPI.js to register, if it doesnt work, adds an error message to the page\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.user.password === this.state.user.checkPw) {\r\n            const user = {\r\n                username: this.state.user.username,\r\n                email: this.state.user.email,\r\n                password: this.state.user.password,\r\n                description: 'Welcome to my profile!',\r\n            }\r\n\r\n            register(user).then(user => {\r\n                if (user.error !== undefined) {\r\n                    this.setState({ errorMessage: 'Cannot signup. Username, password or email needs to be changed.' })\r\n                } else {\r\n                    this.setState({ userCreated: true });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errorMessage: 'Passwords do not match.' })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (this.state.userCreated) {\r\n            return <div>\r\n                <p>User has been successfully created.</p>\r\n                <Link to='/login'>Back to Login page</Link>\r\n            </div>\r\n        } else {\r\n        return <div className=\"container\">\r\n            <div className=\" d-inline-flex\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h1>Sign Up</h1>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"username\" \r\n                            value={this.state.username} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"email\">Email Address</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            name=\"password\" \r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n                    <div for=\"checkPw\" className=\"mb-3\">\r\n                        <label htmlFor=\"checkPw\">Password again</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\"\r\n                            name=\"checkPw\"\r\n                            value={this.state.checkPw} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Already have an account? <Link to='/login'>Login here!</Link></p>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-danger\">Sign Up</button>\r\n                </form>\r\n                </div></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUpForm);","import React from 'react';\r\nimport SignupForm from '../components/SignupForm';\r\n\r\nfunction Signup(props) {\r\n    return (\r\n        <div>\r\n            <SignupForm />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {getSingleUser, editUser} from '../util/UsersAPI.js';\r\n\r\n class UserProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: [],\r\n            edits: '',\r\n            editing: false,\r\n            userProfile: false,\r\n            loading: true,\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleEditBtn = this.handleEditBtn.bind(this);\r\n    }\r\n\r\n    handleChange(event) {   \r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    getUserId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const userId = splitLocation[splitLocation.length -1];\r\n        return userId;\r\n    }\r\n\r\n    getUser = (id) => {\r\n        getSingleUser(id).then((user) => {\r\n            this.setState({\r\n                user: user,\r\n                edits: user.description,\r\n                loading: false,\r\n            })\r\n            if (user.id === localStorage.getItem('currentUser')) {\r\n                this.setState({\r\n                    userProfile: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    editDescription = (event) => {\r\n        event.preventDefault();\r\n\r\n        const edited = {\r\n            username: this.state.user.username,\r\n            email: this.state.user.email,\r\n            description: this.state.edits\r\n        }\r\n\r\n        editUser(edited, localStorage.getItem('currentUser')).then(response => {\r\n            if (response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    userDescription = () => {\r\n        if (this.state.editing) {\r\n            return <div className=\"d-flex flex-column\">\r\n            <form id='descform' onSubmit={this.editDescription}>\r\n                <div className=\"mb-3\">\r\n                <textarea \r\n                form='descform'\r\n                className=\"form-control\"\r\n                name='edits'\r\n                value={this.state.edits}\r\n                onChange={this.handleChange}></textarea>\r\n                </div>\r\n\r\n                <button className=\"btn btn-danger m-3\" type='submit'>Save</button>\r\n            </form>\r\n            </div>\r\n        } else {\r\n            return <div><p>{this.state.user.description}</p></div>\r\n        }\r\n    }\r\n\r\n    handleEditBtn = (event) => {\r\n        event.preventDefault();\r\n        this.setState({editing: !this.state.editing});\r\n    }\r\n\r\n    editBtn = () => {\r\n        if (this.state.userProfile && this.state.editing === false) {\r\n            return <div>\r\n                <button className=\"btn btn-danger m-3\" onClick={this.handleEditBtn}>Edit profile</button>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userId = this.getUserId();\r\n        this.getUser(userId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.user !== undefined) {\r\n                return <div  className=\"p-5 w-100\">\r\n                    <h2>{this.state.user.username}</h2>\r\n                    {this.userDescription()}\r\n                    {this.editBtn()}\r\n                    </div>\r\n            } else {\r\n                return <div>\r\n                        <p>This user does not exist</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(UserProfile);","import {fetchGraphql} from './fetchGQL.js';\r\n\r\nconst getAllBookReviews = async (BookID) => {\r\n    const queryA = {\r\n        query:`\r\n             {\r\n                reviewsByBook(BookID: \"${BookID}\"){\r\n                id, \r\n                Title, \r\n                Content,\r\n                BookTitle,\r\n                BookID,\r\n                UserID {\r\n                    id,\r\n                    username\r\n                  }\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryA);\r\n    return data.reviewsByBook;\r\n}\r\n\r\nconst getAllUserReviews = async (UserID) => {\r\n    const queryB = {\r\n        query:`\r\n             {\r\n                reviewsByUser(UserID: \"${UserID}\"){\r\n                id, \r\n                Title, \r\n                Content,\r\n                BookTitle,\r\n                BookID,\r\n                UserID {\r\n                    id,\r\n                    username\r\n                  }\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryB);\r\n    return data.reviewsByUser;\r\n}\r\n\r\nconst getSingleReview = async (id) => {\r\n    const queryC = {\r\n        query:`\r\n             {\r\n                review(id: \"${id}\"){\r\n                id, \r\n                Title, \r\n                Content,\r\n                BookTitle,\r\n                BookID,\r\n                UserID {\r\n                    id\r\n                    username\r\n                  }\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryC);\r\n    return data.review;\r\n}\r\n\r\nconst addNewReview = async (review) => {\r\n    const queryD = {\r\n        query:`\r\n            mutation {\r\n                addReview(\r\n                BookID: \"${review.BookID}\", \r\n                BookTitle: \"${review.BookTitle}\", \r\n                UserID: \"${review.UserID}\",\r\n                Title: \"${review.Title}\",\r\n                Content: \"${review.Content}\"\r\n                ) {\r\n                id, \r\n                Title, \r\n                Content\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryD);\r\n    return data.addReview;\r\n}\r\n\r\nconst editReview = async (review, id) => {\r\n    const queryE = {\r\n        query:`\r\n            mutation {\r\n                modifyReview(\r\n                id: \"${id}\",\r\n                Title: \"${review.Title}\",\r\n                Content: \"${review.Content}\"\r\n                ) {\r\n                id, \r\n                Title, \r\n                Content\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryE);\r\n    return data.modifyReview;\r\n}\r\n\r\nconst deleteReview = async (id) => {\r\n    const queryF = {\r\n        query:`\r\n            mutation {\r\n                deleteReview(id: \"${id}\"){\r\n                    id\r\n                }\r\n            }`\r\n    }\r\n    const data = await fetchGraphql(queryF);\r\n    return data.deleteReview;\r\n}\r\n\r\nexport { \r\n    getAllBookReviews, \r\n    getAllUserReviews, \r\n    getSingleReview, \r\n    addNewReview, \r\n    editReview, \r\n    deleteReview \r\n};","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllUserReviews } from '../util/ReviewAPI';\r\n\r\n// for /views/Profile.js\r\n class ListUserReviews extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews: [],\r\n            loading: true,\r\n        }\r\n        this.getReviews = this.getReviews.bind(this);\r\n    }\r\n\r\n    getUserId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const userId = splitLocation[splitLocation.length -1];\r\n        return userId;\r\n    }\r\n\r\n    getReviews = (id) => {\r\n        getAllUserReviews(id).then(reviews => {\r\n            this.setState({\r\n              reviews,\r\n              loading: false,\r\n            });\r\n          });\r\n     }\r\n\r\n    componentDidMount() {\r\n        //const userId = localStorage.getItem('currentUser');\r\n        const userId = this.getUserId();\r\n        this.getReviews(userId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.reviews[0] !== undefined) {\r\n                return <div className=\"p-2 w-100\">\r\n                    <h4 className=\"mt-3\">Reviews by this user:</h4>\r\n                {this.state.reviews.map((review) => {\r\n                    return <div className=\"mb-3 border-top border-dark\" key={review.id}>\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/review/${review.id}`}>\r\n                            <div>\r\n                                <h5 className=\"mt-2\">\r\n                                    { review.Title }\r\n                                </h5>\r\n                                <p className=\"small\">{review.BookTitle}</p>\r\n                            </div>\r\n                        </Link></div>\r\n                })} </div>\r\n            } else {\r\n                return <div>\r\n                        <p>No reviews</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListUserReviews;","import React from 'react';\r\nimport UserProfile from '../components/UserProfile';\r\nimport ListUserReviews from './../components/ListUserReviews';\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className=\"d-flex flex-row\">\r\n            <UserProfile />\r\n            <ListUserReviews />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {getBook} from '../util/BookAPI';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n// fetch info about a specific book from google books\r\n// at /views/Book.js\r\n class BookInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookInfo: [],\r\n            loading: true,\r\n            authorKey: 0,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getBookInfo = (id) => {\r\n        getBook(id).then(info => {\r\n            if (info !== undefined) {\r\n                this.setState({\r\n                    bookInfo: info,\r\n                    loading: false\r\n                })\r\n            } else {\r\n                console.log('Error retrieving data.')\r\n            }\r\n        })\r\n    }\r\n\r\n    showBookAuthors = (book) => {\r\n        if (book.volumeInfo.authors !== undefined) {\r\n            return <div>{book.volumeInfo.authors.map((author) => {\r\n                return <p>{author}</p>\r\n            })}</div>\r\n        }\r\n    }\r\n\r\n    showCover = (book) => {\r\n        if (book.volumeInfo.imageLinks !== undefined){\r\n           return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n        } else {\r\n            return <p className=\"mt-3 mb-3\">No image available</p>\r\n        }\r\n    }\r\n\r\n    writeReview = () => {\r\n        if (localStorage.getItem('token') !== null) {\r\n            return <div>\r\n                <Link className=\"link-danger text-decoration-none\" to={`/write/${this.state.bookInfo.id}`}>Write review</Link>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    handleClick(event) {\r\n        event.preventDefault();\r\n\r\n        this.props.history.push('/write');\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const bookid = this.getBookId();\r\n        this.getBookInfo(bookid);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.setState = (state,callback)=>{\r\n            return;\r\n        };\r\n    }\r\n\r\n    render (){\r\n        if(this.state.loading) {\r\n            return <div>\r\n                    <p>Loading...</p>\r\n                </div>\r\n        } else {\r\n            if (this.state.bookInfo.volumeInfo === undefined){\r\n                return <div><p>error</p></div>\r\n            } else {\r\n                return <div className=\"p-2 m-3\">\r\n                <div>\r\n                    {this.showCover(this.state.bookInfo)}\r\n                    <h3>{this.state.bookInfo.volumeInfo.title}</h3>\r\n                    {this.showBookAuthors(this.state.bookInfo)}\r\n                    {this.writeReview()}\r\n                </div>\r\n                </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(BookInfo);","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllBookReviews } from '../util/ReviewAPI';\r\nimport { getSingleUser } from '../util/UsersAPI';\r\n\r\n// for /views/Book.js\r\n class ListReviews extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            reviews: [],\r\n            users: [],\r\n            loading: true,\r\n        }\r\n        this.getReviews = this.getReviews.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getReviews(id) {\r\n        getAllBookReviews(id).then(reviews => {\r\n            this.setState({\r\n              reviews,\r\n              loading: false,\r\n            });\r\n          });\r\n        \r\n     }\r\n\r\n    componentDidMount() {\r\n        const bookId = this.getBookId();\r\n        this.getReviews(bookId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.reviews[0] !== undefined) {\r\n                return <div className=\"p-5 w-100 flex-column\">{this.state.reviews.map((review) => {\r\n                    return <div className=\"mb-3 border-bottom border-dark\" key={review.id}>\r\n                    <div className=\"mb-3 \">\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/review/${review.id}`}><h3>{ review.Title }</h3></Link>\r\n                        <p>{ review.Content }</p>\r\n                        <Link className=\"link-dark fw-bold\" to={`/users/${review.UserID.id}`}>{ review.UserID.username }</Link>\r\n                    </div></div>\r\n                })}</div>\r\n            } else {\r\n                return <div>\r\n                        <p>No reviews</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ListReviews;","import React from 'react';\r\nimport BookInfo from '../components/BookInfo';\r\nimport ListReviews from '../components/ListReviews';\r\n\r\nfunction Book(props) {\r\n    return (\r\n        <div className=\"d-flex flex-row\">\r\n            <BookInfo {...props}/>\r\n            <ListReviews {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Book;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {getBook} from '../util/BookAPI';\r\nimport {addNewReview} from '../util/ReviewAPI';\r\n\r\nclass WriteReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            book: [],\r\n            review: {\r\n                title: '',\r\n                content: '',\r\n            },\r\n            errorMessage: '',\r\n        };\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    getBookId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const bookId = splitLocation[splitLocation.length -1];\r\n        return bookId;\r\n    }\r\n\r\n    getBookInfo = (id) => {\r\n        getBook(id).then(info => {\r\n            if (info !== undefined) {\r\n                this.setState({\r\n                    book: info,\r\n                })\r\n            } else {\r\n                console.log('Error retrieving book.')\r\n            }\r\n        })\r\n    }\r\n    \r\n    handleChange(event) {   \r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            review: {\r\n                ...prevState.review,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const review = {\r\n            BookID: this.state.book.id,\r\n            UserID: localStorage.getItem('currentUser'),\r\n            BookTitle: this.state.book.volumeInfo.title,\r\n            Title: this.state.review.title,\r\n            Content: this.state.review.content\r\n        }\r\n\r\n        // localStorage.getItem('token')\r\n        addNewReview(review).then(sentReview => {\r\n            if (sentReview !== null) {\r\n                if (sentReview.error !== undefined) {\r\n                    console.log('ERROR ' + sentReview.error);\r\n                } else {\r\n                    this.props.history.push(`/book/${this.state.book.id}`);\r\n                }\r\n            } else {\r\n                //this.props.history.push(`/book/${this.state.book.id}`);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const bookid = this.getBookId();\r\n        this.getBookInfo(bookid);\r\n    }\r\n\r\n    render () {\r\n        return <div className=\"container\">\r\n            <div className=\"d-inline-flex\">\r\n                <form id='writeform' onSubmit={this.handleSubmit}>\r\n                    <h2>Write review</h2>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"reviewtitle\" className=\"form-label\">Title</label>\r\n                        <input \r\n                            id=\"reviewtitle\"\r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            name=\"title\" \r\n                            label=\"Title\"\r\n                            value={this.state.review.title} \r\n                            onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"contenttext\" className=\"form-label\">Your review</label>\r\n                        <textarea \r\n                        id=\"contenttext\"\r\n                        form='writeform'\r\n                        className=\"form-control\"\r\n                        name='content'\r\n                        value={this.state.review.content}\r\n                        onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>{this.state.errorMessage}</p>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-danger m-3\" type=\"submit\">Submit review</button>\r\n                </form>\r\n                </div>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(WriteReview);","import React from 'react';\r\nimport WriteReview from '../components/WriteReview';\r\n\r\nfunction NewReview(props) {\r\n    return (\r\n        <div>\r\n            <WriteReview />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewReview;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { getSingleReview, editReview, deleteReview } from '../util/ReviewAPI';\r\nimport { getSingleUser} from '../util/UsersAPI';\r\nimport { getBook } from '../util/BookAPI';\r\n\r\n// TEST\r\n class ShowReview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            review: [],\r\n            edits: '',\r\n            user: [],\r\n            book: [],\r\n            viewerWriter: false,\r\n            editing: false,\r\n            loading: true,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getReview = this.getReview.bind(this);\r\n        this.reviewEdit = this.reviewEdit.bind(this);\r\n        this.handleEditBtn = this.handleEditBtn.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleChange(event) {   \r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    getReviewId = () => {\r\n        const currentLocation = window.location.href;\r\n        const splitLocation = currentLocation.split('/');\r\n        const reviewId = splitLocation[splitLocation.length -1];\r\n        return reviewId;\r\n    }\r\n\r\n    getReview(id) {\r\n        getSingleReview(id).then(review => {\r\n            this.setState({\r\n              review: review,\r\n              loading: false,\r\n            });\r\n            this.getUser(review.UserID.id);\r\n            this.getBookData(review.BookID);\r\n            if (localStorage.getItem('currentUser') === review.UserID.id){\r\n                this.setState({\r\n                    viewerWriter: true,\r\n                    edits: review.Content,\r\n                })\r\n            }\r\n          });\r\n     }\r\n\r\n     // userinfo\r\n     getUser = (id) => {\r\n        if (this.state.review !== undefined) {\r\n           getSingleUser(id).then(user => {\r\n               this.setState((prev) => ({\r\n                   user\r\n               }))\r\n           })\r\n        } else {\r\n            setTimeout(this.getUser(id), 1000);\r\n        }\r\n    }\r\n\r\n    findUser = (id) => {\r\n        const n = this.state.user.findIndex(x => x.id === id);\r\n        const u = this.state.user[n];\r\n\r\n        if(u === undefined) {\r\n            return '';\r\n        } else {\r\n           return u.username;\r\n        }\r\n    }\r\n\r\n    getBookData = (id) => {\r\n        getBook(id).then(book => {\r\n            if (book !== undefined) {\r\n                this.setState({\r\n                    book\r\n                })\r\n            } else {\r\n                console.log('Error retrieving book.')\r\n            }\r\n        })\r\n    }\r\n\r\n    //  edit review (with token)\r\n    reviewEdit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n            Title: this.state.review.Title,\r\n            Content: this.state.edits\r\n        }\r\n\r\n        editReview(data, this.state.review.id)\r\n        .then((response) => {\r\n            if(response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEditBtn = (event) => {\r\n        event.preventDefault();\r\n        this.setState({editing: !this.state.editing});\r\n    }\r\n    \r\n    //  delete review (with token)\r\n    handleDelete = (event) => {\r\n        event.preventDefault();\r\n\r\n        deleteReview(this.state.review.id, localStorage.getItem('token')).then(response => {\r\n            if (response.error !== undefined) {\r\n                console.log(response.error);\r\n            } else {\r\n                this.props.history.push(`/users/${localStorage.getItem('currentUser')}`);\r\n            }\r\n        })\r\n    }\r\n\r\n    // if editing, review content will be editable through a form\r\n    contentView = () => {\r\n        if (this.state.editing) {\r\n            return <div className=\"d-flex flex-column\">\r\n                <form id='editform' onSubmit={this.reviewEdit}>\r\n                    <div className=\"input-group mb-3\">\r\n                    <textarea \r\n                    form='editform'\r\n                    className=\"form-control\"\r\n                    name='edits'\r\n                    value={this.state.edits}\r\n                    onChange={this.handleChange}></textarea>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-danger m-3\" type='submit'>Save</button>\r\n                </form>\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <p>{this.state.review.Content}</p>\r\n                <Link className=\"link-dark fw-bold\" to={`/users/${this.state.review.UserID.id}`}>{this.state.review.UserID.username}</Link>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    // edit and delete buttons (only visible for the user who wrote the review)\r\n    editBtn = () => {\r\n        if (this.state.viewerWriter && this.state.editing === false) {\r\n            return <div>\r\n                <button className=\"btn btn-danger m-3\" onClick={this.handleEditBtn}>Edit review</button>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    deleteBtn = () => {\r\n        if (this.state.viewerWriter) {\r\n            return <div><button className=\"btn btn-danger mt-5 m-3\" onClick={this.handleDelete}>Delete review</button></div>\r\n    }}\r\n\r\n    showCover = (book) => {\r\n        if (book.volumeInfo.imageLinks !== undefined){\r\n           return <img className=\"mt-3\" src={ book.volumeInfo.imageLinks.thumbnail } alt={book.volumeInfo.title}/>\r\n        } else {\r\n            return <p className=\"mt-3 mb-3\">No image available</p>\r\n        }\r\n    }\r\n\r\n    showBookAuthors = (book) => {\r\n        if (book.volumeInfo.authors !== undefined) {\r\n            return <div>{book.volumeInfo.authors.map((author) => {\r\n                return <p>{author}</p>\r\n            })}</div>\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const reviewId = this.getReviewId();\r\n        this.getReview(reviewId);\r\n    }\r\n\r\n    render (){\r\n        if (this.state.loading) {\r\n            return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n        } else {\r\n            if (this.state.review.Title !== undefined && this.state.book.volumeInfo !== undefined) {\r\n                return <div className=\"d-flex flex-row\">\r\n                    <div>\r\n                    <div className=\"p-2 m-3\">\r\n                        {this.showCover(this.state.book)}\r\n                        <Link className=\"link-danger text-decoration-none\" to={`/book/${this.state.book.id}`}><h2>{this.state.book.volumeInfo.title}</h2></Link>\r\n                        {this.showBookAuthors(this.state.book)}\r\n                        {this.deleteBtn()}\r\n                    </div>\r\n                </div>\r\n                    <div className=\"p-5 w-100\">\r\n                        <h3>{this.state.review.Title}</h3>\r\n                        {this.contentView()}\r\n                        \r\n                        {this.editBtn()}\r\n                    </div>\r\n                        \r\n                    </div>\r\n            } else {\r\n                return <div>\r\n                        <p>Loading...</p>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(ShowReview);","import React from 'react';\r\nimport ShowReview from '../components/ShowReview';\r\n\r\nfunction Review(props) {\r\n    return (\r\n        <div>\r\n            <ShowReview />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Review;","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { deleteUser } from '../util/UsersAPI.js';\r\n\r\n class DeleteUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    removeUser = (id) => {\r\n        deleteUser(id).then(response => {\r\n            if (response.error !== undefined){\r\n                console.log('what ' + response.error);\r\n            } else {\r\n                localStorage.clear();\r\n                this.props.history.push('/login');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        event.preventDefault();\r\n        this.removeUser(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    render (){\r\n        return <div>\r\n            <button className=\"btn btn-danger m-3\" onClick={this.handleClick}>Delete user</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(DeleteUser);","import React from 'react';\r\nimport DeleteUser from '../components/DeleteUser';\r\n\r\nfunction Settings(props) {\r\n    return (\r\n        <div>\r\n            <h1>Settings</h1>\r\n            <DeleteUser />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Search from './views/Search';\nimport Login from './views/Login';\nimport Signup from './views/Signup';\nimport Profile from './views/Profile';\nimport Book from './views/Book';\nimport NewReview from './views/NewReview';\nimport Review from './views/Review';\nimport Settings from './views/Settings';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    }\n  }\n\n  // set the user in the state\n  setUser = (user) => {\n    this.setState({ user });\n  }\n  \n  render () {\n    return (\n      <div className=\"App\">\n        <div className='container'>\n\n          <Router basename=''>\n            <Header />\n            <Switch>\n              <Route exact path='/' render={(props) => (\n                <Search {...props}   />\n              )}></Route>\n              <Route exact path='/login' render={(props) => (\n                <Login {...props} state={this.state} setUser={this.setUser}/>\n              )}></Route>\n              <Route exact path='/signup' render={(props) => (\n                <Signup {...props} />\n              )}></Route>\n              <Route exact path='/users/:id' render={(props) => (\n                <Profile {...props} />\n              )}></Route>\n              <Route exact path='/book/:id' render={(props) => (\n                <Book {...props} />\n              )}></Route>\n              <Route exact path='/write/:id' render={(props) => (\n                <NewReview {...props} />\n              )}></Route>\n              <Route exact path='/review/:id' render={(props) => (\n                <Review {...props} />\n              )}></Route>\n              <Route exact path='/settings' render={(props) => (\n                <Settings {...props} />\n              )}></Route>\n  \n            </Switch>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}